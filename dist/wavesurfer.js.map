{"version":3,"sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/./node_modules/debounce/index.js","webpack://WaveSurfer/./src/drawer.canvasentry.js","webpack://WaveSurfer/./src/drawer.js","webpack://WaveSurfer/./src/drawer.multicanvas.js","webpack://WaveSurfer/./src/mediaelement-webaudio.js","webpack://WaveSurfer/./src/mediaelement.js","webpack://WaveSurfer/./src/peakcache.js","webpack://WaveSurfer/./src/util/ajax.js","webpack://WaveSurfer/./src/util/extend.js","webpack://WaveSurfer/./src/util/fetch.js","webpack://WaveSurfer/./src/util/frame.js","webpack://WaveSurfer/./src/util/get-id.js","webpack://WaveSurfer/./src/util/index.js","webpack://WaveSurfer/./src/util/max.js","webpack://WaveSurfer/./src/util/min.js","webpack://WaveSurfer/./src/util/observer.js","webpack://WaveSurfer/./src/util/prevent-click.js","webpack://WaveSurfer/./src/util/request-animation-frame.js","webpack://WaveSurfer/./src/util/style.js","webpack://WaveSurfer/./src/wavesurfer.js","webpack://WaveSurfer/./src/webaudio.js"],"names":["debounce","func","wait","immediate","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","apply","debounced","arguments","callNow","clear","clearTimeout","flush","module","exports","CanvasEntry","wave","waveCtx","progress","progressCtx","start","end","id","constructor","name","toLowerCase","canvasContextAttributes","element","getContext","elementWidth","totalWidth","width","height","offsetLeft","elementSize","hasProgressCanvas","clearRect","canvas","waveColor","progressColor","fillStyle","x","y","radius","fillRectToContext","ctx","drawRoundedRect","fillRect","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","fill","peaks","absmax","halfH","offsetY","drawLineToContext","length","first","Math","round","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","i","peak","h","halfPixel","j","format","quality","type","Promise","resolve","toBlob","toDataURL","Drawer","container","params","pixelRatio","lastPos","wrapper","el","styles","util","style","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","hideScrollbar","overflowY","setupWrapperEvents","e","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","rtl","right","left","scrollLeft","scrollWidth","addEventListener","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","handleEvent","setWidth","clearWave","barWidth","drawBars","drawWave","percent","recenterOnPosition","half","clientWidth","maxScroll","target","offset","rate","autoCenterRate","max","min","updateSize","minPxDelta","pos","autoCenter","newPos","autoCenterImmediately","updateProgress","unAll","parentNode","removeChild","channelIndex","Observer","MultiCanvas","maxCanvasWidth","maxCanvasElementWidth","canvases","progressWave","EntryClass","drawingContextAttributes","overlap","ceil","barRadius","createWrapper","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","updateCursor","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","forEach","entry","updateDimensions","leftOffset","initWave","initProgress","push","lastEntry","parentElement","destroy","pop","frame","prepareDraw","hasMinVals","undefined","peakIndexScale","bar","gap","barGap","step","halfHmod","floor","barMinHeight","reflection","abs","reflectedPeaks","len","drawLine","splitChannelsOptions","channelColors","setFillStyles","drawLines","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRects","splitChannels","filterChannels","includes","fn","drawIndex","Array","channels","filteredChannels","filter","c","hideChannel","overlay","setHeight","channelPeaks","indexOf","barHeight","normalize","some","call","val","all","map","getImage","images","MediaElementWebAudio","sourceMediaElement","setPlaybackRate","audioRate","createTimer","createVolumeNode","createScriptNode","createAnalyserNode","media","createMediaElementSource","mediaElement","ac","connect","analyser","value","gainNode","gain","setValueAtTime","currentTime","destroyWebAudio","MediaElement","duration","paused","playbackRate","play","pause","volume","mediaType","elementPosition","isMuted","buffer","onPlayEnd","mediaListeners","error","canplay","ended","seeked","event","volumechange","muted","Object","keys","removeEventListener","onAudioProcess","isPaused","getCurrentTime","on","url","preload","controls","mediaControls","autoplay","src","crossOrigin","prevMedia","querySelector","_load","elt","HTMLMediaElement","Error","load","console","log","_setupMediaListeners","setVolume","explicitDuration","Infinity","seekable","getDuration","clearPlayEnd","seekTo","promise","setPlayEnd","_onPlayEnd","time","un","deviceId","setSinkId","reject","destroyed","removeMediaElementOnDestroy","WebAudio","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","item","arr","concat","sort","a","b","uncachedRangePairs","peakCacheRangePairs","ajax","options","instance","xhr","XMLHttpRequest","fired100","open","method","responseType","requestHeaders","header","setRequestHeader","key","withCredentials","lengthComputable","loaded","total","status","response","send","extend","dest","warn","sources","source","ProgressHandler","contentLength","_reader","body","getReader","parseInt","controller","read","then","done","onProgress","close","byteLength","enqueue","catch","fetchFile","fetchHeaders","Headers","fetchRequest","Request","AbortController","append","fetchOptions","headers","mode","credentials","cache","redirect","referrer","signal","fetch","progressAvailable","documentMode","test","navigator","userAgent","get","Response","ReadableStream","errMsg","ok","arrayBuffer","json","blob","text","getId","prefix","random","toString","substring","values","largest","smallest","Number","_disabledEventEmissions","handlers","callback","splice","handler","eventNames","preventClickHandler","stopPropagation","preventClick","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","bind","prop","PluginClass","ws","WaveSurfer","wavesurfer","init","defaultParams","audioContext","audioScriptProcessor","backend","backgroundColor","dragSelection","desynchronized","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","backends","assign","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","prototype","supportsWebAudio","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","staticProps","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","drawBuffer","getPlayedPercents","newVolume","getVolume","seconds","skip","seekAndCenter","recenter","isFinite","oldScrollParent","getPlaybackRate","setMute","mute","filters","color","background","channelIndices","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","decodeArrayBuffer","data","loadDecodedBuffer","reader","FileReader","loadArrayBuffer","readAsArrayBuffer","empty","preloadIgnoreReasons","activeReasons","reason","join","loadBuffer","loadMediaElement","action","once","getArrayBuffer","setPeaks","urlOrElt","loadElt","err","request","percentComplete","accuracy","noWindow","JSON","stringify","encodeURIComponent","abort","stop","disconnectSource","cancelAjax","clearTmpEvents","destroyAllPlugins","VERSION","__VERSION__","PLAYING","PAUSED","FINISHED","AudioContext","webkitAudioContext","WaveSurferAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","offlineAudioContext","stateBehaviors","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","getAudioContext","lastPlay","scheduledPause","states","create","mergedPeaks","offlineAc","scriptNode","splitPeaks","state","setState","setLength","disconnect","setFilters","disconnectFilters","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","audio","Audio","createMediaStreamDestination","srcObject","stream","errback","getOfflineAudioContext","decodeAudioData","numberOfChannels","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","closeAudioContext","createSource","createBufferSource","noteGrainOn","noteOff","adjustedTime","resume"],"mappings":"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","file":"wavesurfer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/wavesurfer.js\");\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","/**\n * @since 3.0.0\n */\n\nimport style from './util/style';\nimport getId from './util/get-id';\n\n/**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */\nexport default class CanvasEntry {\n    constructor() {\n        /**\n         * The wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.wave = null;\n        /**\n         * The wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.waveCtx = null;\n        /**\n         * The (optional) progress wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.progress = null;\n        /**\n         * The (optional) progress wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.progressCtx = null;\n        /**\n         * Start of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         * @private\n         */\n        this.start = 0;\n        /**\n         * End of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         * @private\n         */\n        this.end = 1;\n        /**\n         * Unique identifier for this entry\n         *\n         * @type {string}\n         */\n        this.id = getId(\n            typeof this.constructor.name !== 'undefined'\n                ? this.constructor.name.toLowerCase() + '_'\n                : 'canvasentry_'\n        );\n        /**\n         * Canvas 2d context attributes\n         *\n         * @type {object}\n         */\n        this.canvasContextAttributes = {};\n    }\n\n    /**\n     * Store the wave canvas element and create the 2D rendering context\n     *\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\n     */\n    initWave(element) {\n        this.wave = element;\n        this.waveCtx = this.wave.getContext('2d', this.canvasContextAttributes);\n    }\n\n    /**\n     * Store the progress wave canvas element and create the 2D rendering\n     * context\n     *\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n     */\n    initProgress(element) {\n        this.progress = element;\n        this.progressCtx = this.progress.getContext(\n            '2d',\n            this.canvasContextAttributes\n        );\n    }\n\n    /**\n     * Update the dimensions\n     *\n     * @param {number} elementWidth Width of the entry\n     * @param {number} totalWidth Total width of the multi canvas renderer\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(elementWidth, totalWidth, width, height) {\n        // where the canvas starts and ends in the waveform, represented as a\n        // decimal between 0 and 1\n        this.start = this.wave.offsetLeft / totalWidth || 0;\n        this.end = this.start + elementWidth / totalWidth;\n\n        // set wave canvas dimensions\n        this.wave.width = width;\n        this.wave.height = height;\n        let elementSize = { width: elementWidth + 'px' };\n        style(this.wave, elementSize);\n\n        if (this.hasProgressCanvas) {\n            // set progress canvas dimensions\n            this.progress.width = width;\n            this.progress.height = height;\n            style(this.progress, elementSize);\n        }\n    }\n\n    /**\n     * Clear the wave and progress rendering contexts\n     */\n    clearWave() {\n        // wave\n        this.waveCtx.clearRect(\n            0,\n            0,\n            this.waveCtx.canvas.width,\n            this.waveCtx.canvas.height\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            this.progressCtx.clearRect(\n                0,\n                0,\n                this.progressCtx.canvas.width,\n                this.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Set the fill styles for wave and progress\n     *\n     * @param {string} waveColor Fill color for the wave canvas\n     * @param {?string} progressColor Fill color for the progress canvas\n     */\n    setFillStyles(waveColor, progressColor) {\n        this.waveCtx.fillStyle = waveColor;\n\n        if (this.hasProgressCanvas) {\n            this.progressCtx.fillStyle = progressColor;\n        }\n    }\n\n    /**\n     * Draw a rectangle for wave and progress\n     *\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRects(x, y, width, height, radius) {\n        this.fillRectToContext(this.waveCtx, x, y, width, height, radius);\n\n        if (this.hasProgressCanvas) {\n            this.fillRectToContext(\n                this.progressCtx,\n                x,\n                y,\n                width,\n                height,\n                radius\n            );\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a `canvas` element\n     *\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRectToContext(ctx, x, y, width, height, radius) {\n        if (!ctx) {\n            return;\n        }\n\n        if (radius) {\n            this.drawRoundedRect(ctx, x, y, width, height, radius);\n        } else {\n            ctx.fillRect(x, y, width, height);\n        }\n    }\n\n    /**\n     * Draw a rounded rectangle on Canvas\n     *\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Canvas context\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     *\n     * @return {void}\n     * @example drawRoundedRect(ctx, 50, 50, 5, 10, 3)\n     */\n    drawRoundedRect(ctx, x, y, width, height, radius) {\n        if (height === 0) {\n            return;\n        }\n        // peaks are float values from -1 to 1. Use absolute height values in\n        // order to correctly calculate rounded rectangle coordinates\n        if (height < 0) {\n            height *= -1;\n            y -= height;\n        }\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(\n            x + width,\n            y + height,\n            x + width - radius,\n            y + height\n        );\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Render the actual wave and progress lines\n     *\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\n        this.drawLineToContext(\n            this.waveCtx,\n            peaks,\n            absmax,\n            halfH,\n            offsetY,\n            start,\n            end\n        );\n\n        if (this.hasProgressCanvas) {\n            this.drawLineToContext(\n                this.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        }\n    }\n\n    /**\n     * Render the actual waveform line on a `canvas` element\n     *\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const first = Math.round(length * this.start);\n\n        // use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas\n        const last = Math.round(length * this.end) + 1;\n\n        const canvasStart = first;\n        const canvasEnd = last;\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n        // optimization\n        const halfOffset = halfH + offsetY;\n        const absmaxHalf = absmax / halfH;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\n        );\n\n        let i, peak, h;\n        for (i = canvasStart; i < canvasEnd; i++) {\n            peak = peaks[2 * i] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        // draw the bottom edge going backwards, to make a single\n        // closed hull to fill\n        let j = canvasEnd - 1;\n        for (j; j >= canvasStart; j--) {\n            peak = peaks[2 * j + 1] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset -\n                Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\n        );\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Destroys this entry\n     */\n    destroy() {\n        this.waveCtx = null;\n        this.wave = null;\n\n        this.progressCtx = null;\n        this.progress = null;\n    }\n\n    /**\n     * Return image data of the wave `canvas` element\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise` that\n     * resolves with a `Blob` instance.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\n     * returns a data URL. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with a `Blob` instance.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return new Promise(resolve => {\n                this.wave.toBlob(resolve, format, quality);\n            });\n        } else if (type === 'dataURL') {\n            return this.wave.toDataURL(format, quality);\n        }\n    }\n}\n","import * as util from './util';\n\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n        /** @private */\n        this.container = container;\n        /**\n         * @type {WavesurferParams}\n         * @private\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n        /** @private */\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = this.container.appendChild(\n            document.createElement('wave')\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = e.targetTouches\n            ? e.targetTouches[0].clientX\n            : e.clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n\n        let progress;\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress =\n                (this.params.rtl ? bbox.right - clientX : clientX - bbox.left) *\n                    (this.params.pixelRatio / nominalWidth) || 0;\n\n            if (progress > 1) {\n                progress = 1;\n            }\n        } else {\n            progress =\n                ((this.params.rtl\n                    ? bbox.right - clientX\n                    : clientX - bbox.left) +\n                    this.wrapper.scrollLeft) /\n                    this.wrapper.scrollWidth || 0;\n        }\n\n        return progress;\n    }\n\n    /**\n     * @private\n     */\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const scrollbarHeight =\n                this.wrapper.offsetHeight - this.wrapper.clientHeight;\n            if (scrollbarHeight !== 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (e.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('dblclick', e => {\n            if (this.params.interact) {\n                this.fireEvent('dblclick', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth\n            ? this.drawBars(peaks, 0, start, end)\n            : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the view-port at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the view-port on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // set rate at which waveform is centered\n            let rate = this.params.autoCenterRate;\n\n            // make rate depend on width of view and length of waveform\n            rate /= half;\n            rate *= maxScroll;\n\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number} Horizontal scroll position in pixels\n     */\n    getScrollX() {\n        let x = 0;\n        if (this.wrapper) {\n            const pixelRatio = this.params.pixelRatio;\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n            // In cases of elastic scroll (safari with mouse wheel) you can\n            // scroll beyond the limits of the container\n            // Calculate and floor the scrollable extent to make sure an out\n            // of bounds value is not returned\n            // Ticket #1312\n            if (this.params.scrollParent) {\n                const maxScroll = ~~(\n                    this.wrapper.scrollWidth * pixelRatio -\n                    this.getWidth()\n                );\n                x = Math.min(maxScroll, Math.max(0, x));\n            }\n        }\n        return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number} The width of the container\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width The new width of the container\n     * @return {boolean} Whether the width of the container was updated or not\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            this.style(this.wrapper, {\n                width: ~~(this.width / this.params.pixelRatio) + 'px'\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height The new height of the container.\n     * @return {boolean} Whether the height of the container was updated or not\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be rendered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(\n                    newPos,\n                    this.params.autoCenterImmediately\n                );\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container) {\n                this.container.removeChild(this.wrapper);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n","import Drawer from './drawer';\nimport * as util from './util';\nimport CanvasEntry from './drawer.canvasentry';\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is rendered. If the `waveColor`\n         * and `progressColor` are the same color it is not.\n         *\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n\n        /**\n         * List of `CanvasEntry` instances.\n         *\n         * @private\n         * @type {Array}\n         */\n        this.canvases = [];\n\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        this.progressWave = null;\n\n        /**\n         * Class used to generate entries.\n         *\n         * @private\n         * @type {function}\n         */\n        this.EntryClass = CanvasEntry;\n\n        /**\n         * Canvas 2d context attributes.\n         *\n         * @private\n         * @type {object}\n         */\n        this.canvasContextAttributes = params.drawingContextAttributes;\n\n        /**\n         * Overlap added between entries to prevent vertical white stripes\n         * between `canvas` elements.\n         *\n         * @type {number}\n         */\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n\n        /**\n         * The radius of the wave bars. Makes bars rounded\n         *\n         * @private\n         * @type {number}\n         */\n        this.barRadius = params.barRadius || 0;\n    }\n\n    /**\n     * Initialize the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     * @private\n     */\n    createElements() {\n        this.progressWave = this.wrapper.appendChild(\n            this.style(document.createElement('wave'), {\n                position: 'absolute',\n                zIndex: 3,\n                left: 0,\n                top: 0,\n                bottom: 0,\n                overflow: 'hidden',\n                width: '0',\n                display: 'none',\n                boxSizing: 'border-box',\n                borderRightStyle: 'solid',\n                pointerEvents: 'none'\n            })\n        );\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\n        );\n\n        // add required canvases\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        // remove older existing canvases, if any\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\n        const lastCanvas = this.canvases.length - 1;\n        this.canvases.forEach((entry, i) => {\n            if (i == lastCanvas) {\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\n            }\n            this.updateDimensions(entry, canvasWidth, this.height);\n\n            entry.clearWave();\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     * @private\n     */\n    addCanvas() {\n        const entry = new this.EntryClass();\n        entry.canvasContextAttributes = this.canvasContextAttributes;\n        entry.hasProgressCanvas = this.hasProgressCanvas;\n        entry.halfPixel = this.halfPixel;\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        // wave\n        entry.initWave(\n            this.wrapper.appendChild(\n                this.style(document.createElement('canvas'), {\n                    position: 'absolute',\n                    zIndex: 2,\n                    left: leftOffset + 'px',\n                    top: 0,\n                    bottom: 0,\n                    height: '100%',\n                    pointerEvents: 'none'\n                })\n            )\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            entry.initProgress(\n                this.progressWave.appendChild(\n                    this.style(document.createElement('canvas'), {\n                        position: 'absolute',\n                        left: leftOffset + 'px',\n                        top: 0,\n                        bottom: 0,\n                        height: '100%'\n                    })\n                )\n            );\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop single canvas from the list\n     *\n     * @private\n     */\n    removeCanvas() {\n        let lastEntry = this.canvases[this.canvases.length - 1];\n\n        // wave\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress);\n        }\n\n        // cleanup\n        if (lastEntry) {\n            lastEntry.destroy();\n            lastEntry = null;\n        }\n\n        this.canvases.pop();\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @private\n     * @param {CanvasEntry} entry Target entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // update canvas dimensions\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n        // style element\n        this.style(this.progressWave, { display: 'block' });\n    }\n\n    /**\n     * Clear the whole multi-canvas\n     */\n    clearWave() {\n        util.frame(() => {\n            this.canvases.forEach(entry => entry.clearWave());\n        })();\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap =\n                    this.params.barGap === null\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\n                        : Math.max(\n                              this.params.pixelRatio,\n                              this.params.barGap * this.params.pixelRatio\n                          );\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let i = first;\n                let halfHmod = 1;\n\n                for (i; i < last; i += step) {\n                    const peak =\n                        peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                    let h = Math.round((peak / absmax) * halfH);\n\n                    /* in case of silences, allow the user to specify that we\n                     * always draw *something* (normally a 1px high bar) */\n                    if (h == 0 && this.params.barMinHeight)\n                        h = this.params.barMinHeight;\n\n                    if (!this.params.reflection) {\n                      halfHmod = 2;\n                      h = Math.abs(h);\n                    }\n\n                    this.fillRect(\n                        i + this.halfPixel,\n                        halfH * halfHmod - h * halfHmod + offsetY,\n                        bar + this.halfPixel,\n                        h * 2 * halfHmod,\n                        this.barRadius\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks, channelIndex }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i = 0;\n                    for (i; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex);\n                }\n\n                // always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel,\n                    this.barRadius\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @private\n     * @param {number[]} peaks Peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that \n     * should be rendered\n     * @param {channelIndex} channelIndex The channel index of the line drawn\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end, channelIndex) {\n       const { waveColor, progressColor } = this.params.splitChannelsOptions.channelColors[channelIndex] || {};\n        this.canvases.forEach((entry, i) => {\n            this.setFillStyles(entry, waveColor, progressColor);\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Draw a rectangle on the multi-canvas\n     *\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     * @param {number} radius Radius of the rectangle\n     */\n    fillRect(x, y, width, height, radius) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i = startCanvas;\n        for (i; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.wave.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                this.setFillStyles(entry);\n\n                entry.fillRects(\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1,\n                    radius\n                );\n            }\n        }\n    }\n\n    /**\n     * Returns whether to hide the channel from being drawn based on params.\n     *\n     * @private\n     * @param {number} channelIndex The index of the current channel.\n     * @returns {bool} True to hide the channel, false to draw.\n     */\n    hideChannel(channelIndex) {\n        return this.params.splitChannels && this.params.splitChannelsOptions.filterChannels.includes(channelIndex);\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by `drawBars`\n     * and `drawWave`\n     *\n     * @private\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n     * split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered. If this isn't set only a flat line is rendered\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call, e.g. `drawWave`\n     * @param {number} drawIndex The index of the current channel after filtering.\n     * @returns {void}\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn, drawIndex) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n\n                if (this.params.splitChannels) {\n                    const filteredChannels =  channels.filter((c, i) => !this.hideChannel(i));\n                    if (!this.params.splitChannelsOptions.overlay) {\n                        this.setHeight(\n                            Math.max(filteredChannels.length, 1) *\n                                this.params.height *\n                                this.params.pixelRatio\n                        );\n                    } \n\n                    return channels.forEach((channelPeaks, i) => \n                        this.prepareDraw(channelPeaks, i, start, end, fn, filteredChannels.indexOf(channelPeaks))\n                    );                    \n                }\n                peaks = channels[0];\n            }\n\n            // Return and do not draw channel peaks if hidden.\n            if (this.hideChannel(channelIndex)) {\n                return;\n            }\n\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                const max = util.max(peaks);\n                const min = util.min(peaks);\n                absmax = -min > max ? -min : max;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const offsetY = height * drawIndex || 0;\n            const halfH = height / 2;\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks,\n                channelIndex: channelIndex,\n            });\n        })();\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @private\n     * @param {CanvasEntry} entry Target entry\n     * @param {string} waveColor Wave color to draw this entry\n     * @param {string} progressColor Progress color to draw this entry\n     */\n    setFillStyles(entry, waveColor = this.params.waveColor, progressColor = this.params.progressColor) {\n        entry.setFillStyles(waveColor, progressColor);\n    }\n\n    /**\n     * Return image data of the multi-canvas\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise`.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\n     * `type` this returns a single data URL or an array of data URLs,\n     * one for each canvas. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with an array of `Blob` instances, one for each\n     * canvas.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return Promise.all(\n                this.canvases.map(entry => {\n                    return entry.getImage(format, quality, type);\n                })\n            );\n        } else if (type === 'dataURL') {\n            let images = this.canvases.map(entry =>\n                entry.getImage(format, quality, type)\n            );\n            return images.length > 1 ? images : images[0];\n        }\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n","import MediaElement from './mediaelement';\n\n/**\n * MediaElementWebAudio backend: allows to load audio as HTML5 audio tag and use it with WebAudio API.\n * Setting the MediaElementWebAudio backend, there is the possibility to load audio of big dimensions, using the WebAudio API features.\n * The audio to load is an HTML5 audio tag, so you have to use the same methods of MediaElement backend for loading and playback.\n * In this way, the audio resource is not loaded entirely from server, but in ranges, since you load an HTML5 audio tag.\n * In this way, filters and other functionalities can be performed like with WebAudio backend, but without decoding\n * internally audio data, that caused crashing of the browser. You have to give also peaks, so the audio data are not decoded.\n *\n * @since 3.2.0\n */\nexport default class MediaElementWebAudio extends MediaElement {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.sourceMediaElement = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n    }\n    /**\n     * Private method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @private\n     */\n    _load(media, peaks) {\n        super._load(media, peaks);\n        this.createMediaElementSource(media);\n    }\n\n    /**\n     * Create MediaElementSource node\n     *\n     * @since 3.2.0\n     * @param {HTMLMediaElement} mediaElement HTML5 Audio to load\n     */\n    createMediaElementSource(mediaElement) {\n        this.sourceMediaElement = this.ac.createMediaElementSource(\n            mediaElement\n        );\n        this.sourceMediaElement.connect(this.analyser);\n    }\n\n    /**\n     * Set the audio volume\n     * overwrite inherited method from mediaelement.js\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        super.destroy();\n\n        this.destroyWebAudio();\n    }\n}\n","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        /**\n         * Initially a dummy media element to catch errors. Once `_load` is\n         * called, this will contain the actual `HTMLMediaElement`.\n         * @private\n         */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {},\n            volume: 0\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.volume = 1;\n        /** @private */\n        this.isMuted = false;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n        /** @private */\n        this.mediaListeners = {};\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Attach event listeners to media element.\n     */\n    _setupMediaListeners() {\n        this.mediaListeners.error = () => {\n            this.fireEvent('error', 'Error loading media element');\n        };\n        this.mediaListeners.canplay = () => {\n            this.fireEvent('canplay');\n        };\n        this.mediaListeners.ended = () => {\n            this.fireEvent('finish');\n        };\n        // listen to and relay play, pause and seeked events to enable\n        // playback control from the external media element\n        this.mediaListeners.play = () => {\n            this.fireEvent('play');\n        };\n        this.mediaListeners.pause = () => {\n            this.fireEvent('pause');\n        };\n        this.mediaListeners.seeked = event => {\n            this.fireEvent('seek');\n        };\n        this.mediaListeners.volumechange = event => {\n            this.isMuted = this.media.muted;\n            if (this.isMuted) {\n                this.volume = 0;\n            } else {\n                this.volume = this.media.volume;\n            }\n            this.fireEvent('volume');\n        };\n\n        // reset event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            this.media.removeEventListener(id, this.mediaListeners[id]);\n            this.media.addEventListener(id, this.mediaListeners[id]);\n        });\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            util.frame(onAudioProcess)();\n        };\n\n        this.on('play', onAudioProcess);\n\n        // Update the progress one more time to prevent it from being stuck in\n        // case of lower framerates\n        this.on('pause', () => {\n            this.fireEvent('audioprocess', this.getCurrentTime());\n        });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     * @throws Will throw an error if the `url` argument is not a valid media\n     * element.\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n        media.crossOrigin = 'anonymous';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks);\n    }\n\n    /**\n     * Method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @throws Will throw an error if the `media` argument is not a valid media\n     * element.\n     * @private\n     */\n    _load(media, peaks) {\n        // verify media element is valid\n        if (\n            !(media instanceof HTMLMediaElement) ||\n            typeof media.addEventListener === 'undefined'\n        ) {\n            throw new Error('media parameter is not a valid media element');\n        }\n\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        if (typeof media.load == 'function') {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            console.log('MEDIA LOAD', media);\n            media.load();\n        }\n\n        this.media = media;\n        this._setupMediaListeners();\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.isMuted = media.muted;\n        this.setPlaybackRate(this.playbackRate);\n        this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Media paused or not\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} Current time\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Current position\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number} Playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value Playback rate\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise} Result\n     */\n    play(start, end) {\n        this.seekTo(start);\n        const promise = this.media.play();\n        end && this.setPlayEnd(end);\n\n        return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise} Result\n     */\n    pause() {\n        let promise;\n\n        if (this.media) {\n            promise = this.media.pause();\n        }\n        this.clearPlayEnd();\n\n        return promise;\n    }\n\n    /**\n     * Set the play end\n     *\n     * @param {number} end Where to end\n     */\n    setPlayEnd(end) {\n        this.clearPlayEnd();\n\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            if (!this.media.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            return this.media.setSinkId(deviceId);\n        }\n\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.volume = value;\n        // no need to change when it's already at that volume\n        if (this.media.volume !== this.volume) {\n            this.media.volume = this.volume;\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n        this.destroyed = true;\n\n        // cleanup media event listeners\n        Object.keys(this.mediaListeners).forEach(id => {\n            if (this.media) {\n                this.media.removeEventListener(id, this.mediaListeners[id]);\n            }\n        });\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n","/**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n","import Observer from './observer';\n\n/**\n * Perform an ajax request using `XMLHttpRequest`.\n *\n * @deprecated Use `util.fetchFile` instead.\n *\n * @param {Object} options AJAX options to use. See example below for options.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     method: 'GET',\n *     url: undefined,\n *     responseType: 'json',\n *     xhr: {}\n * };\n *\n * // override default options\n * options.url = '../media/demo.wav';\n * options.responseType = 'arraybuffer';\n * options.xhr = {\n *     requestHeaders: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ],\n *     withCredentials: true\n * };\n *\n * // make ajax call\n * let ajaxCall = util.ajax(options);\n * ajaxCall.on('progress', e => {\n *     console.log('progress', e);\n * });\n * ajaxCall.on('success', (data, e) => {\n *     console.log('success!', data);\n * });\n * ajaxCall.on('error', e => {\n *     console.warn('ajax error: ' + e.target.statusText);\n * });\n */\nexport default function ajax(options) {\n    const instance = new Observer();\n    const xhr = new XMLHttpRequest();\n    let fired100 = false;\n    xhr.open(options.method || 'GET', options.url, true);\n    xhr.responseType = options.responseType || 'json';\n\n    if (options.xhr) {\n        if (options.xhr.requestHeaders) {\n            // add custom request headers\n            options.xhr.requestHeaders.forEach(header => {\n                xhr.setRequestHeader(header.key, header.value);\n            });\n        }\n        if (options.xhr.withCredentials) {\n            // use credentials\n            xhr.withCredentials = true;\n        }\n    }\n\n    xhr.addEventListener('progress', e => {\n        instance.fireEvent('progress', e);\n        if (e.lengthComputable && e.loaded == e.total) {\n            fired100 = true;\n        }\n    });\n    xhr.addEventListener('load', e => {\n        if (!fired100) {\n            instance.fireEvent('progress', e);\n        }\n        instance.fireEvent('load', e);\n        if (200 == xhr.status || 206 == xhr.status) {\n            instance.fireEvent('success', xhr.response, e);\n        } else {\n            instance.fireEvent('error', e);\n        }\n    });\n    xhr.addEventListener('error', e => instance.fireEvent('error', e));\n    xhr.send();\n    instance.xhr = xhr;\n    return instance;\n}\n","/* eslint no-console: [\"error\", { allow: [\"warn\"] }] */\n/**\n * Extend an object shallowly with others\n *\n * @param {Object} dest The target object\n * @param {Object[]} sources The objects to use for extending\n *\n * @return {Object} Merged object\n * @deprecated since version 3.3.0\n */\nexport default function extend(dest, ...sources) {\n    console.warn('util.extend is deprecated; use Object.assign instead');\n    sources.forEach(source => {\n        Object.keys(source).forEach(key => {\n            dest[key] = source[key];\n        });\n    });\n    return dest;\n}\n","/**\n * @since 3.0.0\n */\n\nimport Observer from './observer';\n\nclass ProgressHandler {\n    /**\n     * Instantiate ProgressHandler\n     *\n     * @param {Observer} instance The `fetchFile` observer instance.\n     * @param {Number} contentLength Content length.\n     * @param {Response} response Response object.\n     */\n    constructor(instance, contentLength, response) {\n        this.instance = instance;\n        this.instance._reader = response.body.getReader();\n\n        this.total = parseInt(contentLength, 10);\n        this.loaded = 0;\n    }\n\n    /**\n     * A method that is called once, immediately after the `ReadableStream``\n     * is constructed.\n     *\n     * @param {ReadableStreamDefaultController} controller Controller instance\n     *     used to control the stream.\n     */\n    start(controller) {\n        const read = () => {\n            // instance._reader.read() returns a promise that resolves\n            // when a value has been received\n            this.instance._reader\n                .read()\n                .then(({ done, value }) => {\n                    // result objects contain two properties:\n                    // done  - true if the stream has already given you all its data.\n                    // value - some data. Always undefined when done is true.\n                    if (done) {\n                        // ensure onProgress called when content-length=0\n                        if (this.total === 0) {\n                            this.instance.onProgress.call(this.instance, {\n                                loaded: this.loaded,\n                                total: this.total,\n                                lengthComputable: false\n                            });\n                        }\n                        // no more data needs to be consumed, close the stream\n                        controller.close();\n                        return;\n                    }\n\n                    this.loaded += value.byteLength;\n                    this.instance.onProgress.call(this.instance, {\n                        loaded: this.loaded,\n                        total: this.total,\n                        lengthComputable: !(this.total === 0)\n                    });\n                    // enqueue the next data chunk into our target stream\n                    controller.enqueue(value);\n                    read();\n                })\n                .catch(error => {\n                    controller.error(error);\n                });\n        };\n\n        read();\n    }\n}\n\n/**\n * Load a file using `fetch`.\n *\n * @param {object} options Request options to use. See example below.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     url: undefined,\n *     method: 'GET',\n *     mode: 'cors',\n *     credentials: 'same-origin',\n *     cache: 'default',\n *     responseType: 'json',\n *     requestHeaders: [],\n *     redirect: 'follow',\n *     referrer: 'client'\n * };\n *\n * // override some options\n * options.url = '../media/demo.wav';\n\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n * options.responseType = 'arraybuffer';\n *\n * // make fetch call\n * let request = util.fetchFile(options);\n *\n * // listen for events\n * request.on('progress', e => {\n *     console.log('progress', e);\n * });\n *\n * request.on('success', data => {\n *     console.log('success!', data);\n * });\n *\n * request.on('error', e => {\n *     console.warn('fetchFile error: ', e);\n * });\n */\nexport default function fetchFile(options) {\n    if (!options) {\n        throw new Error('fetch options missing');\n    } else if (!options.url) {\n        throw new Error('fetch url missing');\n    }\n    const instance = new Observer();\n    const fetchHeaders = new Headers();\n    const fetchRequest = new Request(options.url);\n\n    // add ability to abort\n    instance.controller = new AbortController();\n\n    // check if headers have to be added\n    if (options && options.requestHeaders) {\n        // add custom request headers\n        options.requestHeaders.forEach(header => {\n            fetchHeaders.append(header.key, header.value);\n        });\n    }\n\n    // parse fetch options\n    const responseType = options.responseType || 'json';\n    const fetchOptions = {\n        method: options.method || 'GET',\n        headers: fetchHeaders,\n        mode: options.mode || 'cors',\n        credentials: options.credentials || 'same-origin',\n        cache: options.cache || 'default',\n        redirect: options.redirect || 'follow',\n        referrer: options.referrer || 'client',\n        signal: instance.controller.signal\n    };\n\n    fetch(fetchRequest, fetchOptions)\n        .then(response => {\n            // store response reference\n            instance.response = response;\n\n            let progressAvailable = true;\n            if (\n                !response.body ||\n                document.documentMode ||\n                /Edge/.test(navigator.userAgent)\n            ) {\n                // ReadableStream is not yet supported in this browser\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                progressAvailable = false;\n            }\n\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n            const contentLength = response.headers.get('content-length');\n            if (contentLength === null) {\n                // Content-Length server response header missing.\n                // Don't evaluate download progress if we can't compare against a total size\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                progressAvailable = false;\n            }\n\n            if (!progressAvailable) {\n                // not able to check download progress so skip it\n                return response;\n            }\n\n            // fire progress event when during load\n            instance.onProgress = e => {\n                instance.fireEvent('progress', e);\n            };\n\n            return new Response(\n                new ReadableStream(\n                    new ProgressHandler(instance, contentLength, response)\n                ),\n                fetchOptions\n            );\n        })\n        .then(response => {\n            let errMsg;\n            if (response.ok) {\n                switch (responseType) {\n                    case 'arraybuffer':\n                        return response.arrayBuffer();\n\n                    case 'json':\n                        return response.json();\n\n                    case 'blob':\n                        return response.blob();\n\n                    case 'text':\n                        return response.text();\n\n                    default:\n                        errMsg = 'Unknown responseType: ' + responseType;\n                        break;\n                }\n            }\n            if (!errMsg) {\n                errMsg = 'HTTP error status: ' + response.status;\n            }\n            throw new Error(errMsg);\n        })\n        .then(response => {\n            instance.fireEvent('success', response);\n        })\n        .catch(error => {\n            instance.fireEvent('error', error);\n        });\n\n    // return the fetch request\n    instance.fetchRequest = fetchRequest;\n    return instance;\n}\n","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n","/**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */\nexport default function getId(prefix) {\n    if (prefix === undefined) {\n        prefix = 'wavesurfer_';\n    }\n    return (\n        prefix +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n","export { default as ajax } from './ajax';\nexport { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as Observer } from './observer';\nexport { default as extend } from './extend';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\nexport { default as preventClick } from './prevent-click';\nexport { default as fetchFile } from './fetch';\n","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this._disabledEventEmissions = [];\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Disable firing a list of events by name. When specified, event handlers for any event type\n     * passed in here will not be called.\n     *\n     * @since 4.0.0\n     * @param {string[]} eventNames an array of event names to disable emissions for\n     * @example\n     * // disable seek and interaction events\n     * wavesurfer.setDisabledEventEmissions(['seek', 'interaction']);\n     */\n    setDisabledEventEmissions(eventNames) {\n        this._disabledEventEmissions = eventNames;\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers || this._disabledEventEmissions.includes(event)) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n","/**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */\nfunction preventClickHandler(event) {\n    event.stopPropagation();\n    document.body.removeEventListener('click', preventClickHandler, true);\n}\n\n/**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */\nexport default function preventClick(values) {\n    document.body.addEventListener('click', preventClickHandler, true);\n}\n","/* eslint-disable valid-jsdoc */\n/**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\nimport MediaElementWebAudio from './mediaelement-webaudio';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform on current progress\n * @property {number} autoCenterRate=5 If autoCenter is active, rate at which the\n * waveform is centered\n * @property {boolean} autoCenterImmediately=false If autoCenter is active, immediately\n * center waveform on current progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'|'MediaElementWebAudio'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for unsupported browsers.\n * MediaElementWebAudio allows to use WebAudio API also with big audio files, loading audio like with\n * MediaElement backend (HTML5 audio tag). You have to use the same methods of MediaElement backend for loading and\n * playback, giving also peaks, so the audio data are not decoded. In this way you can use WebAudio features, like filters,\n * also with audio with big duration. For example:\n * ` wavesurfer.load(url | HTMLMediaElement, peaks, preload, duration);\n *   wavesurfer.play();\n *   wavesurfer.setFilter(customFilter);\n * `\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave bars.\n * @property {number} barRadius=0 The radius of the wave bars. Makes bars rounded\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {number} barWidth=null Draw the waveform using bars.\n * @property {number} barMinHeight=null If specified, draw at least a bar of this height,\n * eliminating waveform gaps\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {object} drawingContextAttributes={desynchronized: false} Drawing context\n * attributes.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement` or `MediaElementWebAudio`)\n * `'audio'|'video'` ('video' only for `MediaElement`)\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} reflection=true toggle mirrored waveform\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options. For example:\n * `let xhr = {\n *     cache: 'default',\n *     mode: 'cors',\n *     method: 'GET',\n *     credentials: 'same-origin',\n *     redirect: 'follow',\n *     referrer: 'client',\n *     headers: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ]\n * };`\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     * @param {Object} ws The wavesurfer instance\n     */\n    constructor(params, ws) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioScriptProcessor: null,\n        audioRate: 1,\n        autoCenter: true,\n        autoCenterRate: 5,\n        autoCenterImmediately: false,\n        backend: 'WebAudio',\n        backgroundColor: null,\n        barHeight: 1,\n        barRadius: 0,\n        barGap: null,\n        barMinHeight: null,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        drawingContextAttributes: {\n            // Boolean that hints the user agent to reduce the latency\n            // by desynchronizing the canvas paint cycle from the event\n            // loop\n            desynchronized: false\n        },\n        duration: null,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        reflection: true,\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        rtl: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        splitChannelsOptions: {\n            overlay: false,\n            channelColors: {},\n            filterChannels: [],\n        },\n        waveColor: '#999',\n        xhr: {}\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio,\n        MediaElementWebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n    static VERSION = __VERSION__;\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this} Wavesurfer instance\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = Object.assign({}, this.defaultParams, params);\n\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        if (this.params.rtl === true) {\n            util.style(this.container, { transform: 'rotateY(180deg)' });\n        }\n\n        if (this.params.backgroundColor) {\n            this.setBackgroundColor(this.params.backgroundColor);\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * canceled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentRequest = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            (this.params.backend == 'WebAudio' ||\n                this.params.backend === 'MediaElementWebAudio') &&\n            !WebAudio.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n\n        /**\n         * Get the current ready status.\n         *\n         * @example const isReady = wavesurfer.isReady;\n         * @return {boolean}\n         */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(\n            () => {\n                if (\n                    prevWidth != this.drawer.wrapper.clientWidth &&\n                    !this.params.scrollParent\n                ) {\n                    prevWidth = this.drawer.wrapper.clientWidth;\n                    this.drawer.fireEvent('redraw');\n                }\n            },\n            typeof this.params.responsive === 'number'\n                ? this.params.responsive\n                : 100\n        );\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this} The wavesurfer instance\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this} The wavesurfer instance\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Get a map of plugin names that are currently initialised\n     *\n     * @example wavesurfer.getPlugins();\n     * @return {Object} Object with plugin names\n     */\n    getActivePlugins() {\n        return this.initialisedPluginList;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this} The wavesurfer instance\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this} The wavesurfer instance\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this} The wavesurfer instance\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('finish');\n        });\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n\n        // only needed for MediaElement and MediaElementWebAudio backend\n        if (\n            this.params.backend === 'MediaElement' ||\n            this.params.backend === 'MediaElementWebAudio'\n        ) {\n            this.backend.on('seek', () => {\n                this.drawer.progress(this.backend.getPlayedPercents());\n            });\n\n            this.backend.on('volume', () => {\n                let newVolume = this.getVolume();\n                this.fireEvent('volume', newVolume);\n\n                if (this.backend.isMuted !== this.isMuted) {\n                    this.isMuted = this.backend.isMuted;\n                    this.fireEvent('mute', this.isMuted);\n                }\n            });\n        }\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (seconds >= this.getDuration()) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise} Result of the backend play method\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        this.fireEvent('interaction', () => this.play(start, end));\n        return this.backend.play(start, end);\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} position Position (in seconds) to stop at\n     * @version 3.3.0\n     */\n    setPlayEnd(position) {\n        this.backend.setPlayEnd(position);\n    }\n\n    /**\n     * Stops and pauses playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise} Result of the backend pause method\n     */\n    pause() {\n        if (!this.backend.isPaused()) {\n            return this.backend.pause();\n        }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise} Result of the backend play or pause method\n     */\n    playPause() {\n        return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            throw new Error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const paused = this.backend.isPaused();\n        // avoid draw wrong position while playing backward seeking\n        if (!paused) {\n            this.backend.pause();\n        }\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (!paused) {\n            this.backend.play();\n        }\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Sets the ID of the audio device to use for output and returns a Promise.\n     *\n     * @param {string} deviceId String value representing underlying output\n     * device\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\n     * no errors detected.\n     */\n    setSinkId(deviceId) {\n        return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n        this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number} The current playback rate.\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. If not currently muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute Specify `true` to mute audio.\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     * console.log(wavesurfer.getMute()) // logs false\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            this.fireEvent('mute', this.isMuted);\n            return;\n        }\n\n        if (mute) {\n            // If currently not muted then save current volume,\n            // turn off the volume and update the mute properties\n            this.savedVolume = this.backend.getVolume();\n            this.backend.setVolume(0);\n            this.isMuted = true;\n            this.fireEvent('volume', 0);\n        } else {\n            // If currently muted then restore to the saved volume\n            // and update the mute properties\n            this.backend.setVolume(this.savedVolume);\n            this.isMuted = false;\n            this.fireEvent('volume', this.savedVolume);\n        }\n        this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean} Current mute status\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array} List of enabled filters\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getWaveColor() {\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color) {\n        this.params.waveColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getProgressColor() {\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color) {\n        this.params.progressColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the background color of the waveform container.\n     *\n     * @return {string} A CSS color string.\n     */\n    getBackgroundColor() {\n        return this.params.backgroundColor;\n    }\n\n    /**\n     * Set the background color of the waveform container.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\n     */\n    setBackgroundColor(color) {\n        this.params.backgroundColor = color;\n        util.style(this.container, { background: this.params.backgroundColor });\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Hide channels from being drawn on the waveform if splitting channels.\n     * \n     * For example, if we want to draw only the peaks for the right stereo channel:\n     *\n     * const wavesurfer = new WaveSurfer.create({...splitChannels: true});\n     * wavesurfer.load('stereo_audio.mp3');\n     * \n     * wavesurfer.setFilteredChannel([0]); <-- hide left channel peaks.\n     *\n     * @param {array} channelIndices Channels to be filtered out from drawing.\n     * @version 4.0.0\n     */\n    setFilteredChannels(channelIndices) {\n        this.params.splitChannelsOptions.filterChannels = channelIndices;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave view-port and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() *\n                this.params.minPxPerSec *\n                this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        // always start at 0 after zooming for scrolling : issue redraw left part\n        let start = 0;\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (\n            this.params.fillParent &&\n            (!this.params.scrollParent || nominalWidth < parentWidth)\n        ) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(\n                width,\n                start,\n                end\n            );\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n                this.drawer.drawPeaks(\n                    peaks,\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n            }\n        } else {\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer Buffer to process\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer Buffer to process\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.isReady = true;\n        this.fireEvent('ready');\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement` and `MediaElementWebAudio`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current `minPxPerSec` and zoom value) without having to decode\n     * the audio.\n     * @returns {void}\n     * @throws Will throw an error if the `url` argument is empty.\n     * @example\n     * // uses fetch or media element to load file (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * // peaks\n     * wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        if (!url) {\n            throw new Error('url parameter cannot be empty');\n        }\n        this.empty();\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                \"Backend is not of type 'MediaElement' or 'MediaElementWebAudio'\":\n                    ['MediaElement', 'MediaElementWebAudio'].indexOf(\n                        this.params.backend\n                    ) === -1,\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n            case 'MediaElementWebAudio':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @param {string} url URL of audio file\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Optional duration of audio file\n     * @returns {void}\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration Optional duration of audio file\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                // ignore when backend was already destroyed\n                if (!this.backend.destroyed) {\n                    this.drawBuffer();\n                    this.isReady = true;\n                    this.fireEvent('ready');\n                }\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If no pre-decoded peaks provided or pre-decoded peaks are\n        // provided with forceDecode flag, attempt to download the\n        // audio file and decode it with Web Audio.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n        }\n\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        this.arraybuffer = arraybuffer;\n        this.backend.decodeArrayBuffer(\n            arraybuffer,\n            data => {\n                // Only use the decoded data if we haven't been destroyed or\n                // another decode started in the meantime\n                if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                    callback(data);\n                    this.arraybuffer = null;\n                }\n            },\n            () => this.fireEvent('error', 'Error decoding audiobuffer')\n        );\n    }\n\n    /**\n     * Load an array buffer using fetch and pass the result to a callback\n     *\n     * @param {string} url The URL of the file object\n     * @param {function} callback The function to call on complete\n     * @returns {util.fetchFile} fetch call\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        let options = Object.assign(\n            {\n                url: url,\n                responseType: 'arraybuffer'\n            },\n            this.params.xhr\n        );\n        const request = util.fetchFile(options);\n\n        this.currentRequest = request;\n\n        this.tmpEvents.push(\n            request.on('progress', e => {\n                this.onProgress(e);\n            }),\n            request.on('success', data => {\n                callback(data);\n                this.currentRequest = null;\n            }),\n            request.on('error', e => {\n                this.fireEvent('error', e);\n                this.currentRequest = null;\n            })\n        );\n\n        return request;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e Progress event\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and opens in a new window.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks\n     * @param {number} accuracy=10000\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start Start index\n     * @param {number} end End index\n     * @return {Promise} Promise that resolves with array of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start, end) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start, end);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n        return new Promise((resolve, reject) => {\n            const json = JSON.stringify(arr);\n\n            if (!noWindow) {\n                window.open(\n                    'data:application/json;charset=utf-8,' +\n                        encodeURIComponent(json)\n                );\n            }\n            resolve(json);\n        });\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `'image/png'`. Other supported types are\n     * `'image/jpeg'` and `'image/webp'`.\n     *\n     * @param {string} format='image/png' A string indicating the image format.\n     * The default format type is `'image/png'`.\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\n     * quality to use for image formats that use lossy compression such as\n     * `'image/jpeg'`` and `'image/webp'`.\n     * @param {string} type Image data type to return. Either 'dataURL' (default)\n     * or 'blob'.\n     * @return {string|string[]|Promise} When using `'dataURL'` type this returns\n     * a single data URL or an array of data URLs, one for each canvas. When using\n     * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\n     * instances, one for each canvas.\n     */\n    exportImage(format, quality, type) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n        if (!type) {\n            type = 'dataURL';\n        }\n\n        return this.drawer.getImage(format, quality, type);\n    }\n\n    /**\n     * Cancel any fetch request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentRequest && this.currentRequest.controller) {\n            this.currentRequest.controller.abort();\n            this.currentRequest = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.isReady = false;\n        this.cancelAjax();\n        this.clearTmpEvents();\n\n        // empty drawer\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        if (this.backend) {\n            this.backend.destroy();\n        }\n        if (this.drawer) {\n            this.drawer.destroy();\n        }\n        this.isDestroyed = true;\n        this.isReady = false;\n        this.arraybuffer = null;\n    }\n}\n","import * as util from './util';\n\n// using constants to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** scriptBufferSize: size of the processing buffer */\n    static scriptBufferSize = 256;\n    /** audioContext: allows to process audio with WebAudio API */\n    audioContext = null;\n    /** @private */\n    offlineAudioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext} Existing audio context, or creates a new one\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate The sample rate to use\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\n     * a new one\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** ac: Audio Context instance */\n        this.ac =\n            params.audioContext ||\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** gainNode: allows to control audio volume */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** analyser: provides audio analysis information */\n        this.analyser = null;\n        /** scriptNode: allows processing audio */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = params.duration;\n        /**\n         * Boolean indicating if the backend was destroyed.\n         */\n        this.destroyed = false;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {string} state The new state\n     */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters One or more filters to set\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n    /** Create ScriptProcessorNode to process audio */\n    createScriptNode() {\n        if (this.params.audioScriptProcessor) {\n            this.scriptNode = this.params.audioScriptProcessor;\n        } else {\n            if (this.ac.createScriptProcessor) {\n                this.scriptNode = this.ac.createScriptProcessor(\n                    WebAudio.scriptBufferSize\n                );\n            } else {\n                this.scriptNode = this.ac.createJavaScriptNode(\n                    WebAudio.scriptBufferSize\n                );\n            }\n        }\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {};\n    }\n    /** Create analyser node to perform audio analysis */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            /**\n             * The webaudio API doesn't currently support setting the device\n             * output. Here we create an HTMLAudioElement, connect the\n             * webaudio stream to that element and setSinkId there.\n             */\n            let audio = new window.Audio();\n            if (!audio.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            audio.autoplay = true;\n            var dest = this.ac.createMediaStreamDestination();\n            this.gainNode.disconnect();\n            this.gainNode.connect(dest);\n            audio.srcObject = dest.stream;\n\n            return audio.setSinkId(deviceId);\n        } else {\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n        }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete.\n     * @param {function} errback The function to call on error.\n     */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\n            );\n        }\n        this.offlineAc.decodeAudioData(\n            arraybuffer,\n            data => callback(data),\n            errback\n        );\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Explicit duration\n     */\n    setPeaks(peaks, duration) {\n        if (duration != null) {\n            this.explicitDuration = duration;\n        }\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio)\n     *\n     * @param {number} length The rendered length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n        if (!this.buffer) {\n            return [];\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        if (!this.buffer) {\n            return this.params.splitChannels\n                ? this.splitPeaks\n                : this.mergedPeaks;\n        }\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                /**\n                 * Initialize the max and min to the first sample of this\n                 * subrange, so that even if the samples are entirely\n                 * on one side of zero, we still return the true max and\n                 * min values in the subrange.\n                 */\n                let min = chan[start];\n                let max = min;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Position\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n    /**\n     * Destroy all references with WebAudio, disconnecting audio nodes and closing Audio Context\n     */\n    destroyWebAudio() {\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n    }\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.destroyed = true;\n\n        this.destroyWebAudio();\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer Decoded audio buffer to load\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        // adjust for old browsers\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.source.playbackRate.setValueAtTime(\n            this.playbackRate,\n            this.ac.currentTime\n        );\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Whether or not this backend is currently paused\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration of loaded buffer\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}} Object containing start and end\n     * positions\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number} The playback position in seconds\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start);\n\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        this.source && this.source.stop(0);\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} The current time in seconds\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number} The current playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value The playback rate to use\n     */\n    setPlaybackRate(value) {\n        value = value || 1;\n        if (this.isPaused()) {\n            this.playbackRate = value;\n        } else {\n            this.pause();\n            this.playbackRate = value;\n            this.play();\n        }\n    }\n\n    /**\n     * Set a point in seconds for playback to stop at.\n     *\n     * @param {number} end Position to end at\n     * @version 3.3.0\n     */\n    setPlayEnd(end) {\n        this.scheduledPause = end;\n    }\n}\n"],"sourceRoot":""}