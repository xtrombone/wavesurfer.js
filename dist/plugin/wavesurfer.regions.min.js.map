{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/./src/plugin/regions.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Region","params","regionsUtils","ws","this","wavesurfer","wrapper","drawer","util","style","regionsUtil","id","getId","start","Number","end","scrollWidth","getDuration","resize","undefined","Boolean","drag","isResizing","isDragging","loop","color","handleStyle","left","right","data","attributes","maxLength","minLength","_onRedraw","updateRender","scroll","scrollParent","scrollSpeed","scrollThreshold","preventContextMenu","channelIdx","parseInt","regionHeight","marginTop","channelCount","backend","buffer","numberOfChannels","Math","floor","getHeight","bindInOut","render","on","fireEvent","element","removeChild","un","play","once","realTime","getCurrentTime","playLoop","regionEl","document","createElement","attrname","className","title","formatTime","setAttribute","position","zIndex","height","top","handleLeft","appendChild","handleRight","css","cursor","width","maxWidth","backgroundColor","handleLeftCss","assign","handleRightCss","bindEvents","map","time","slice","join","pixelRatio","dur","getWidth","startLimited","endLimited","max","min","round","regionWidth","firedIn","firedOut","onProcess","addEventListener","e","stopPropagation","preventDefault","bindDragEvents","startTime","touchId","maxScroll","scrollDirection","wrapperRect","container","updated","onDown","duration","touches","length","targetTouches","identifier","getRegionSnapToGridValue","handleEvent","clientWidth","getBoundingClientRect","target","tagName","toLowerCase","classList","contains","onUp","preventClick","onMove","oldTime","delta","onDrag","onResize","regionRect","x","clientX","edgeScroll","scrollLeft","requestAnimationFrame","body","removeEventListener","maxEnd","update","direction","RegionsPlugin","maxRegions","getOwnPropertyNames","Observer","forEach","_onBackendCreated","regions","region","add","list","_onReady","dragSelection","enableDragSelection","keys","deferInit","staticProps","addRegion","options","initialisedPluginList","initPlugin","clearRegions","clear","disableDragSelection","instance","isReady","wouldExceedMaxRegions","remove","slop","pxMove","eventDown","eventUp","eventMove","startUpdate","endUpdate","cur","snapToGridInterval","offset","snapToGridOffset"],"mappings":";;;;;CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,UAAW,GAAIH,GACI,iBAAZC,QACdA,QAAiB,QAAID,KAErBD,EAAiB,WAAIA,EAAiB,YAAK,GAAIA,EAAiB,WAAW,QAAIC,KARjF,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,8BAIjBhC,EAAoBA,EAAoBiC,EAAI,G,omCC1ExCC,E,WACT,WAAYC,EAAQC,EAAcC,GAAI,qBAClCC,KAAKC,WAAaF,EAClBC,KAAKE,QAAUH,EAAGI,OAAOD,QACzBF,KAAKI,KAAOL,EAAGK,KACfJ,KAAKK,MAAQL,KAAKI,KAAKC,MACvBL,KAAKM,YAAcR,EAEnBE,KAAKO,GAAkB,MAAbV,EAAOU,GAAaR,EAAGK,KAAKI,QAAUX,EAAOU,GACvDP,KAAKS,MAAQC,OAAOb,EAAOY,QAAU,EACrCT,KAAKW,IACa,MAAdd,EAAOc,IAEHX,KAAKS,MACJ,EAAIT,KAAKE,QAAQU,YAAeZ,KAAKC,WAAWY,cAC/CH,OAAOb,EAAOc,KACxBX,KAAKc,YACiBC,IAAlBlB,EAAOiB,QAA8BE,QAAQnB,EAAOiB,QACxDd,KAAKiB,UAAuBF,IAAhBlB,EAAOoB,MAA4BD,QAAQnB,EAAOoB,MAE9DjB,KAAKkB,YAAa,EAClBlB,KAAKmB,YAAa,EAClBnB,KAAKoB,KAAOJ,QAAQnB,EAAOuB,MAC3BpB,KAAKqB,MAAQxB,EAAOwB,OAAS,qBAG7BrB,KAAKsB,YAAczB,EAAOyB,aAAe,CACrCC,KAAM,GACNC,MAAO,IAEXxB,KAAKyB,KAAO5B,EAAO4B,MAAQ,GAC3BzB,KAAK0B,WAAa7B,EAAO6B,YAAc,GAEvC1B,KAAK2B,UAAY9B,EAAO8B,UACxB3B,KAAK4B,UAAY/B,EAAO+B,UACxB5B,KAAK6B,UAAY,kBAAM,EAAKC,gBAE5B9B,KAAK+B,QAA2B,IAAlBlC,EAAOkC,QAAoBhC,EAAGF,OAAOmC,aACnDhC,KAAKiC,YAAcpC,EAAOoC,aAAe,EACzCjC,KAAKkC,gBAAkBrC,EAAOqC,iBAAmB,GAEjDlC,KAAKmC,wBAC6BpB,IAA9BlB,EAAOsC,oBAEDnB,QAAQnB,EAAOsC,oBAGzB,IAAIC,EACqB,MAArBvC,EAAOuC,YAAsB,EAAIC,SAASxC,EAAOuC,YAIrD,GAHApC,KAAKsC,aAAe,OACpBtC,KAAKuC,UAAY,OAEG,IAAhBH,EAAmB,CACnB,IAAII,EACkC,MAAlCxC,KAAKC,WAAWwC,QAAQC,OAClB1C,KAAKC,WAAWwC,QAAQC,OAAOC,kBAC9B,EACPH,GAAgB,GAAKJ,EAAaI,IAClCxC,KAAKsC,aAAeM,KAAKC,MAAO,EAAIL,EAAgB,KAAO,IAC3DxC,KAAKuC,UAAYvC,KAAKC,WAAW6C,YAAcV,EAAa,MAIpEpC,KAAK+C,YACL/C,KAAKgD,SACLhD,KAAKC,WAAWgD,GAAG,OAAQjD,KAAK6B,WAChC7B,KAAKC,WAAWgD,GAAG,SAAUjD,KAAK6B,WAClC7B,KAAKC,WAAWiD,UAAU,iBAAkBlD,M,yCAIzCH,GACiB,MAAhBA,EAAOY,QACPT,KAAKS,MAAQC,OAAOb,EAAOY,QAEb,MAAdZ,EAAOc,MACPX,KAAKW,IAAMD,OAAOb,EAAOc,MAEV,MAAfd,EAAOuB,OACPpB,KAAKoB,KAAOJ,QAAQnB,EAAOuB,OAEX,MAAhBvB,EAAOwB,QACPrB,KAAKqB,MAAQxB,EAAOwB,OAEE,MAAtBxB,EAAOyB,cACPtB,KAAKsB,YAAczB,EAAOyB,aAEX,MAAfzB,EAAO4B,OACPzB,KAAKyB,KAAO5B,EAAO4B,MAEF,MAAjB5B,EAAOiB,SACPd,KAAKc,OAASE,QAAQnB,EAAOiB,SAEd,MAAfjB,EAAOoB,OACPjB,KAAKiB,KAAOD,QAAQnB,EAAOoB,OAEP,MAApBpB,EAAO8B,YACP3B,KAAK2B,UAAYjB,OAAOb,EAAO8B,YAEX,MAApB9B,EAAO+B,YACP5B,KAAK4B,UAAYlB,OAAOb,EAAO+B,YAEV,MAArB/B,EAAO6B,aACP1B,KAAK0B,WAAa7B,EAAO6B,YAG7B1B,KAAK8B,eACL9B,KAAKkD,UAAU,UACflD,KAAKC,WAAWiD,UAAU,iBAAkBlD,Q,+BAKxCA,KAAKmD,UACLnD,KAAKE,QAAQkD,YAAYpD,KAAKmD,SAC9BnD,KAAKmD,QAAU,KACfnD,KAAKkD,UAAU,UACflD,KAAKC,WAAWoD,GAAG,OAAQrD,KAAK6B,WAChC7B,KAAKC,WAAWoD,GAAG,SAAUrD,KAAK6B,WAClC7B,KAAKC,WAAWiD,UAAU,iBAAkBlD,S,2BAQ/CS,GACD,IAAMd,EAAIc,GAAST,KAAKS,MACxBT,KAAKC,WAAWqD,KAAK3D,EAAGK,KAAKW,KAC7BX,KAAKkD,UAAU,QACflD,KAAKC,WAAWiD,UAAU,cAAelD,Q,+BAOpCS,GAAO,WACNd,EAAIc,GAAST,KAAKS,MACxBT,KAAKC,WAAWqD,KAAK3D,GACrBK,KAAKuD,KAAK,OAAO,WACb,IAAMC,EAAW,EAAKvD,WAAWwD,iBACjC,GAAID,GAAY,EAAK/C,OAAS+C,GAAY,EAAK7C,IAC3C,OAAO,EAAK+C,gB,+BAOpB,IAAMC,EAAWC,SAASC,cAAc,UAMxC,IAAK,IAAMC,KAJXH,EAASI,UAAY,oBACrBJ,EAASK,MAAQhE,KAAKiE,WAAWjE,KAAKS,MAAOT,KAAKW,KAClDgD,EAASO,aAAa,UAAWlE,KAAKO,IAEfP,KAAK0B,WACxBiC,EAASO,aACL,eAAiBJ,EACjB9D,KAAK0B,WAAWoC,IAYxB,GARA9D,KAAKK,MAAMsD,EAAU,CACjBQ,SAAU,WACVC,OAAQ,EACRC,OAAQrE,KAAKsC,aACbgC,IAAKtE,KAAKuC,YAIVvC,KAAKc,OAAQ,CACb,IAAMyD,EAAaZ,EAASa,YACxBZ,SAASC,cAAc,WAErBY,EAAcd,EAASa,YACzBZ,SAASC,cAAc,WAG3BU,EAAWR,UAAY,4CACvBU,EAAYV,UAAY,0CAGxB,IAAMW,EAAM,CACRC,OAAQ,aACRR,SAAU,WACVG,IAAK,MACLM,MAAO,KACPC,SAAU,MACVR,OAAQ,OACRS,gBAAiB,oBAIfC,EACwB,SAA1B/E,KAAKsB,YAAYC,KACXjD,OAAO0G,OAAO,CAAEzD,KAAM,OAASmD,EAAK1E,KAAKsB,YAAYC,MACrD,KACJ0D,EACyB,SAA3BjF,KAAKsB,YAAYE,MACXlD,OAAO0G,OACT,CAAExD,MAAO,OACTkD,EACA1E,KAAKsB,YAAYE,OAEf,KAENuD,GACA/E,KAAKK,MAAMkE,EAAYQ,GAGvBE,GACAjF,KAAKK,MAAMoE,EAAaQ,GAIhCjF,KAAKmD,QAAUnD,KAAKE,QAAQsE,YAAYb,GACxC3D,KAAK8B,eACL9B,KAAKkF,WAAWvB,K,iCAGTlD,EAAOE,GACd,OAAQF,GAASE,EAAM,CAACF,GAAS,CAACA,EAAOE,IACpCwE,KAAI,SAAAC,GAAI,MACL,CACIxC,KAAKC,MAAOuC,EAAO,KAAQ,KAC1B,KAAOxC,KAAKC,MAAMuC,EAAO,KAAKC,OAAO,IACxCC,KAAK,QAEVA,KAAK,O,iCAIV,OAAOtF,KAAKC,WAAWE,OAAOyE,MAAQ5E,KAAKC,WAAWJ,OAAO0F,a,qCAM7D,IAAMC,EAAMxF,KAAKC,WAAWY,cACtB+D,EAAQ5E,KAAKyF,WAEfC,EAAe1F,KAAKS,MACpBkF,EAAa3F,KAAKW,IAkBtB,GAjBI+E,EAAe,IAEfC,GADAD,EAAe,GAGfC,EAAaH,IAEbE,EAAeF,IADfG,EAAaH,GACsBE,IAGjB,MAAlB1F,KAAK4B,YACL+D,EAAa/C,KAAKgD,IAAIF,EAAe1F,KAAK4B,UAAW+D,IAGnC,MAAlB3F,KAAK2B,YACLgE,EAAa/C,KAAKiD,IAAIH,EAAe1F,KAAK2B,UAAWgE,IAGrC,MAAhB3F,KAAKmD,QAAiB,CAGtB,IAAM5B,EAAOqB,KAAKkD,MAAOJ,EAAeF,EAAOZ,GACzCmB,EAAcnD,KAAKkD,MAAOH,EAAaH,EAAOZ,GAASrD,EAS7D,IAAK,IAAMuC,KAPX9D,KAAKK,MAAML,KAAKmD,QAAS,CACrB5B,KAAMA,EAAO,KACbqD,MAAOmB,EAAc,KACrBjB,gBAAiB9E,KAAKqB,MACtBsD,OAAQ3E,KAAKiB,KAAO,OAAS,YAGVjB,KAAK0B,WACxB1B,KAAKmD,QAAQe,aACT,eAAiBJ,EACjB9D,KAAK0B,WAAWoC,IAIxB9D,KAAKmD,QAAQa,MAAQhE,KAAKiE,WAAWjE,KAAKS,MAAOT,KAAKW,Q,kCAKlD,WACRX,KAAKgG,SAAU,EACfhG,KAAKiG,UAAW,EAEhB,IAAMC,EAAY,SAAAd,GACd,IAAI3E,EAAQmC,KAAKkD,MAAmB,GAAb,EAAKrF,OAAc,GACtCE,EAAMiC,KAAKkD,MAAiB,GAAX,EAAKnF,KAAY,GACtCyE,EAAOxC,KAAKkD,MAAa,GAAPV,GAAa,IAG1B,EAAKa,UACN,EAAKD,UACJvF,EAAQ2E,GAAQzE,GAAOyE,KAExB,EAAKa,UAAW,EAChB,EAAKD,SAAU,EACf,EAAK9C,UAAU,OACf,EAAKjD,WAAWiD,UAAU,aAAc,KAEvC,EAAK8C,SAAWvF,GAAS2E,GAAQzE,EAAMyE,IACxC,EAAKY,SAAU,EACf,EAAKC,UAAW,EAChB,EAAK/C,UAAU,MACf,EAAKjD,WAAWiD,UAAU,YAAa,KAI/ClD,KAAKC,WAAWwC,QAAQQ,GAAG,eAAgBiD,GAE3ClG,KAAKiD,GAAG,UAAU,WACd,EAAKhD,WAAWwC,QAAQY,GAAG,eAAgB6C,MAI/ClG,KAAKiD,GAAG,OAAO,WACP,EAAK7B,MACL,EAAKnB,WAAWqD,KAAK,EAAK7C,Y,mCAMzB,WACH0B,EAAqBnC,KAAKmC,mBAEhCnC,KAAKmD,QAAQgD,iBAAiB,cAAc,SAAAC,GACxC,EAAKlD,UAAU,aAAckD,GAC7B,EAAKnG,WAAWiD,UAAU,oBAAqB,EAAMkD,MAGzDpG,KAAKmD,QAAQgD,iBAAiB,cAAc,SAAAC,GACxC,EAAKlD,UAAU,aAAckD,GAC7B,EAAKnG,WAAWiD,UAAU,oBAAqB,EAAMkD,MAGzDpG,KAAKmD,QAAQgD,iBAAiB,SAAS,SAAAC,GACnCA,EAAEC,kBACFD,EAAEE,iBACF,EAAKpD,UAAU,QAASkD,GACxB,EAAKnG,WAAWiD,UAAU,eAAgB,EAAMkD,MAGpDpG,KAAKmD,QAAQgD,iBAAiB,YAAY,SAAAC,GACtCA,EAAEC,kBACFD,EAAEE,iBACF,EAAKpD,UAAU,WAAYkD,GAC3B,EAAKnG,WAAWiD,UAAU,kBAAmB,EAAMkD,MAGvDpG,KAAKmD,QAAQgD,iBAAiB,eAAe,SAAAC,GACrCjE,GACAiE,EAAEE,iBAEN,EAAKpD,UAAU,cAAekD,GAC9B,EAAKnG,WAAWiD,UAAU,qBAAsB,EAAMkD,OAItDpG,KAAKiB,MAAQjB,KAAKc,SAClBd,KAAKuG,mB,uCAII,IAITC,EACAC,EACAxF,EACAyF,EACA5F,EAEA6F,EACAC,EAXS,OACPC,EAAY7G,KAAKC,WAAWE,OAAO0G,UACnC5E,EAAcjC,KAAKiC,YACnBC,EAAkBlC,KAAKkC,gBAMzB4E,GAAU,EAmCRC,EAAS,SAAAX,GACX,IAAMY,EAAW,EAAK/G,WAAWY,cAC7BuF,EAAEa,SAAWb,EAAEa,QAAQC,OAAS,IAGpCT,EAAUL,EAAEe,cAAgBf,EAAEe,cAAc,GAAGC,WAAa,MAIxD,EAAKnG,MAAQ,EAAKH,SAClBsF,EAAEC,kBAING,EAAY,EAAKlG,YAAY+G,yBACzB,EAAKpH,WAAWE,OAAOmH,YAAYlB,GAAG,GAAQY,GAIlDN,EAAY,EAAKxG,QAAQU,YAAc,EAAKV,QAAQqH,YACpDX,EAAc,EAAK1G,QAAQsH,wBAE3B,EAAKtG,YAAa,EAClB,EAAKC,YAAa,EACqB,WAAnCiF,EAAEqB,OAAOC,QAAQC,eACjB,EAAKzG,YAAa,EAClBJ,EAASsF,EAAEqB,OAAOG,UAAUC,SAAS,2BAC/B,QACA,QAEN,EAAK1G,YAAa,EAClBF,GAAO,EACPH,GAAS,KAGXgH,EAAO,SAAA1B,GACLA,EAAEa,SAAWb,EAAEa,QAAQC,OAAS,KAIhCjG,GAAQH,KACR,EAAKK,YAAa,EAClB,EAAKD,YAAa,EAClBD,GAAO,EACP0F,EAAkB,KAClB7F,GAAS,GAGTgG,IACAA,GAAU,EACV,EAAK1G,KAAK2H,eACV,EAAK7E,UAAU,aAAckD,GAC7B,EAAKnG,WAAWiD,UAAU,oBAAqB,EAAMkD,MAGvD4B,EAAS,SAAA5B,GACX,IAAMY,EAAW,EAAK/G,WAAWY,cAEjC,KAAIuF,EAAEa,SAAWb,EAAEa,QAAQC,OAAS,MAGhCd,EAAEe,eAAiBf,EAAEe,cAAc,GAAGC,YAAcX,KAGnDxF,GAASH,GAAd,CAIA,IAAMmH,EAAUzB,EACVpB,EAAO,EAAK9E,YAAY+G,yBAC1B,EAAKpH,WAAWE,OAAOmH,YAAYlB,GAAKY,GAGtCkB,EAAQ9C,EAAOoB,EAerB,GAdAA,EAAYpB,EAGR,EAAKnE,MAAQA,IACb6F,EAAUA,KAAaoB,EACvB,EAAKC,OAAOD,IAIZ,EAAKpH,QAAUA,IACfgG,EAAUA,KAAaoB,EACvB,EAAKE,SAASF,EAAOpH,IAIrB,EAAKiB,QACL8E,EAAUU,YAAc,EAAKrH,QAAQU,YACvC,CACE,GAAIK,EAAM,CAGN,IAAMoH,EAAa,EAAKlF,QAAQqE,wBAC5Bc,EAAID,EAAW9G,KAAOqF,EAAYrF,KAGlC6D,EAAO6C,GAAWK,GAAK,EACvB3B,GAAmB,EAEnBvB,EAAO6C,GACPK,EAAID,EAAWzD,OAASgC,EAAYpF,QAEpCmF,EAAkB,KAKI,IAArBA,GAA0B2B,EAAIpG,GACV,IAApByE,GACG2B,EAAID,EAAWzD,MACfgC,EAAYpF,MAAQU,KAExByE,EAAkB,UAEnB,CAEH,IAAI2B,EAAIlC,EAAEmC,QAAU3B,EAAYrF,KAI5BoF,EADA2B,GAAKpG,GACc,EACZoG,GAAK1B,EAAYpF,MAAQU,EACd,EAEA,KAItByE,GAjKO,SAAb6B,EAAapC,GACf,IAAMY,EAAW,EAAK/G,WAAWY,cACjC,GAAK8F,IAAqB1F,GAASH,GAAnC,CAKA,IAAI2H,EACA,EAAKvI,QAAQuI,WAAaxG,EAAc0E,EAC5C,EAAKzG,QAAQuI,WAAaA,EAAa7F,KAAKiD,IACxCa,EACA9D,KAAKgD,IAAI,EAAG6C,IAIhB,IAAMrD,EAAO,EAAK9E,YAAY+G,yBAC1B,EAAKpH,WAAWE,OAAOmH,YAAYlB,GAAKY,GAEtCkB,EAAQ9C,EAAOoB,EACrBA,EAAYpB,EAGZnE,EAAO,EAAKkH,OAAOD,GAAS,EAAKE,SAASF,EAAOpH,GAGjDtD,OAAOkL,uBAAsB,WACzBF,EAAWpC,OAwIPoC,CAAWpC,MAKvBpG,KAAKmD,QAAQgD,iBAAiB,YAAaY,GAC3C/G,KAAKmD,QAAQgD,iBAAiB,aAAcY,GAE5C/G,KAAKE,QAAQiG,iBAAiB,YAAa6B,GAC3ChI,KAAKE,QAAQiG,iBAAiB,YAAa6B,GAE3CpE,SAAS+E,KAAKxC,iBAAiB,UAAW2B,GAC1ClE,SAAS+E,KAAKxC,iBAAiB,WAAY2B,GAE3C9H,KAAKiD,GAAG,UAAU,WACdW,SAAS+E,KAAKC,oBAAoB,UAAWd,GAC7ClE,SAAS+E,KAAKC,oBAAoB,WAAYd,GAC9C,EAAK5H,QAAQ0I,oBAAoB,YAAaZ,GAC9C,EAAK9H,QAAQ0I,oBAAoB,YAAaZ,MAGlDhI,KAAKC,WAAWgD,GAAG,WAAW,WAC1BW,SAAS+E,KAAKC,oBAAoB,UAAWd,GAC7ClE,SAAS+E,KAAKC,oBAAoB,WAAYd,Q,6BAI/CI,GACH,IAAMW,EAAS7I,KAAKC,WAAWY,cAC3Bb,KAAKW,IAAMuH,EAAQW,GAAU7I,KAAKS,MAAQyH,EAAQ,GAItDlI,KAAK8I,OAAO,CACRrI,MAAOT,KAAKS,MAAQyH,EACpBvH,IAAKX,KAAKW,IAAMuH,M,+BAIfA,EAAOa,GACM,UAAdA,EACA/I,KAAK8I,OAAO,CACRrI,MAAOmC,KAAKiD,IAAI7F,KAAKS,MAAQyH,EAAOlI,KAAKW,KACzCA,IAAKiC,KAAKgD,IAAI5F,KAAKS,MAAQyH,EAAOlI,KAAKW,OAG3CX,KAAK8I,OAAO,CACRrI,MAAOmC,KAAKiD,IAAI7F,KAAKW,IAAMuH,EAAOlI,KAAKS,OACvCE,IAAKiC,KAAKgD,IAAI5F,KAAKW,IAAMuH,EAAOlI,KAAKS,a,oBAkEhCuI,E,WA0CjB,WAAYnJ,EAAQE,GAAI,qBACpBC,KAAKH,OAASA,EACdG,KAAKC,WAAaF,EAClBC,KAAKI,KAAL,OACOL,EAAGK,MADV,IAEIiH,yBAA0B,SAAAxI,GACtB,OAAO,EAAKwI,yBAAyBxI,EAAOgB,MAGpDG,KAAKiJ,WAAapJ,EAAOoJ,WAGK3K,OAAO4K,oBACjClJ,KAAKI,KAAK+I,SAAS3J,WAED4J,SAAQ,SAAAjK,GAC1BS,EAAOJ,UAAUL,GAAO,EAAKiB,KAAK+I,SAAS3J,UAAUL,MAEzDa,KAAKC,WAAWL,OAASA,EAEzBI,KAAKqJ,kBAAoB,WACrB,EAAKnJ,QAAU,EAAKD,WAAWE,OAAOD,QAClC,EAAKL,OAAOyJ,SACZ,EAAKzJ,OAAOyJ,QAAQF,SAAQ,SAAAG,GACxB,EAAKC,IAAID,OAMrBvJ,KAAKyJ,KAAO,GACZzJ,KAAK0J,SAAW,WACZ,EAAKxJ,QAAU,EAAKD,WAAWE,OAAOD,QAClC,EAAKL,OAAO8J,eACZ,EAAKC,oBAAoB,EAAK/J,QAElCvB,OAAOuL,KAAK,EAAKJ,MAAML,SAAQ,SAAA7I,GAC3B,EAAKkJ,KAAKlJ,GAAIuB,mB,8CArEZjC,GACV,MAAO,CACH1B,KAAM,UACN2L,aAAWjK,IAAUA,EAAOiK,YAAYjK,EAAOiK,UAC/CjK,OAAQA,EACRkK,YAAa,CACTC,UADS,SACCC,GAIN,OAHKjK,KAAKkK,sBAAsBZ,SAC5BtJ,KAAKmK,WAAW,WAEbnK,KAAKsJ,QAAQE,IAAIS,IAG5BG,aARS,WASLpK,KAAKsJ,SAAWtJ,KAAKsJ,QAAQe,SAGjCT,oBAZS,SAYWK,GACXjK,KAAKkK,sBAAsBZ,SAC5BtJ,KAAKmK,WAAW,WAEpBnK,KAAKsJ,QAAQM,oBAAoBK,IAGrCK,qBAnBS,WAoBLtK,KAAKsJ,QAAQgB,yBAGrBC,SAAUvB,O,kCAgDVhJ,KAAKC,WAAWuK,SAChBxK,KAAKqJ,oBACLrJ,KAAK0J,aAEL1J,KAAKC,WAAWsD,KAAK,QAASvD,KAAK0J,UACnC1J,KAAKC,WAAWsD,KAAK,kBAAmBvD,KAAKqJ,sB,gCAKjDrJ,KAAKC,WAAWoD,GAAG,QAASrD,KAAK0J,UACjC1J,KAAKC,WAAWoD,GAAG,kBAAmBrD,KAAKqJ,mBAC3CrJ,KAAKsK,uBACLtK,KAAKqK,U,8CAQL,OACIrK,KAAKiJ,YAAc3K,OAAOuL,KAAK7J,KAAKyJ,MAAMvC,QAAUlH,KAAKiJ,a,0BAU7DpJ,GAAQ,WACR,GAAIG,KAAKyK,wBAAyB,OAAO,KAEzC,IAAMlB,EAAS,IAAIvJ,KAAKC,WAAWL,OAAOC,EAAQG,KAAKI,KAAMJ,KAAKC,YAQlE,OANAD,KAAKyJ,KAAKF,EAAOhJ,IAAMgJ,EAEvBA,EAAOtG,GAAG,UAAU,kBACT,EAAKwG,KAAKF,EAAOhJ,OAGrBgJ,I,8BAMH,WACJjL,OAAOuL,KAAK7J,KAAKyJ,MAAML,SAAQ,SAAA7I,GAC3B,EAAKkJ,KAAKlJ,GAAImK,c,0CAIF7K,GAAQ,WACxBG,KAAKsK,uBAEL,IAMIrJ,EAEAyF,EACAjG,EACA8I,EACA9C,EAEAE,EACAC,EAdE+D,EAAO9K,EAAO8K,MAAQ,EACtB9D,EAAY7G,KAAKC,WAAWE,OAAO0G,UACnC9E,GACgB,IAAlBlC,EAAOkC,QAAoB/B,KAAKC,WAAWJ,OAAOmC,aAChDC,EAAcpC,EAAOoC,aAAe,EACpCC,EAAkBrC,EAAOqC,iBAAmB,GAE9C8E,EAAWhH,KAAKC,WAAWY,cAK3B+J,EAAS,EAiCPC,EAAY,SAAAzE,GACVA,EAAEa,SAAWb,EAAEa,QAAQC,OAAS,IAGpCF,EAAW,EAAK/G,WAAWY,cAC3B4F,EAAUL,EAAEe,cAAgBf,EAAEe,cAAc,GAAGC,WAAa,KAG5DV,EAAY,EAAKxG,QAAQU,YAAc,EAAKV,QAAQqH,YACpDX,EAAc,EAAK1G,QAAQsH,wBAE3BvG,GAAO,EACPR,EAAQ,EAAKR,WAAWE,OAAOmH,YAAYlB,GAAG,GAC9CmD,EAAS,KACT5C,EAAkB,OAEtB3G,KAAKE,QAAQiG,iBAAiB,YAAa0E,GAC3C7K,KAAKE,QAAQiG,iBAAiB,aAAc0E,GAC5C7K,KAAKiD,GAAG,0BAA0B,WAC9B,EAAK/C,QAAQ0I,oBAAoB,aAAciC,GAC/C,EAAK3K,QAAQ0I,oBAAoB,YAAaiC,MAGlD,IAAMC,EAAU,SAAA1E,GACRA,EAAEa,SAAWb,EAAEa,QAAQC,OAAS,IAIpCjG,GAAO,EACP2J,EAAS,EACTjE,EAAkB,KAEd4C,IACA,EAAKnJ,KAAK2H,eACVwB,EAAOrG,UAAU,aAAckD,GAC/B,EAAKnG,WAAWiD,UAAU,oBAAqBqG,EAAQnD,IAG3DmD,EAAS,OAEbvJ,KAAKE,QAAQiG,iBAAiB,UAAW2E,GACzC9K,KAAKE,QAAQiG,iBAAiB,WAAY2E,GAE1ClH,SAAS+E,KAAKxC,iBAAiB,UAAW2E,GAC1ClH,SAAS+E,KAAKxC,iBAAiB,WAAY2E,GAC3C9K,KAAKiD,GAAG,0BAA0B,WAC9BW,SAAS+E,KAAKC,oBAAoB,UAAWkC,GAC7ClH,SAAS+E,KAAKC,oBAAoB,WAAYkC,GAC9C,EAAK5K,QAAQ0I,oBAAoB,WAAYkC,GAC7C,EAAK5K,QAAQ0I,oBAAoB,UAAWkC,MAGhD,IAAMC,EAAY,SAAA3E,GACd,GAAKnF,OAGC2J,GAAUD,MAIZvE,EAAEa,SAAWb,EAAEa,QAAQC,OAAS,MAGhCd,EAAEe,eAAiBf,EAAEe,cAAc,GAAGC,YAAcX,KAKnD8C,IACDA,EAAS,EAAKC,IAAI3J,GAAU,MADhC,CAKA,IAAMc,EAAM,EAAKV,WAAWE,OAAOmH,YAAYlB,GACzC4E,EAAc,EAAK5K,KAAKiH,yBAC1B5G,EAAQuG,GAENiE,EAAY,EAAK7K,KAAKiH,yBACxB1G,EAAMqG,GAQV,GANAuC,EAAOT,OAAO,CACVrI,MAAOmC,KAAKiD,IAAIoF,EAAWD,GAC3BrK,IAAKiC,KAAKgD,IAAIqF,EAAWD,KAIzBjJ,GAAU8E,EAAUU,YAAc,EAAKrH,QAAQU,YAAa,CAE5D,IAAM0H,EAAIlC,EAAEmC,QAAU3B,EAAYrF,MAE9BoF,EADA2B,GAAKpG,GACc,EACZoG,GAAK1B,EAAYpF,MAAQU,EACd,EAEA,OA1HX,SAAbsG,EAAapC,GACf,GAAKmD,GAAW5C,EAAhB,CAKA,IAAI8B,EACA,EAAKvI,QAAQuI,WAAaxG,EAAc0E,EAC5C,EAAKzG,QAAQuI,WAAaA,EAAa7F,KAAKiD,IACxCa,EACA9D,KAAKgD,IAAI,EAAG6C,IAIhB,IAAM9H,EAAM,EAAKV,WAAWE,OAAOmH,YAAYlB,GAC/CmD,EAAOT,OAAO,CACVrI,MAAOmC,KAAKiD,IAAIlF,EAAMqG,EAAUvG,EAAQuG,GACxCrG,IAAKiC,KAAKgD,IAAIjF,EAAMqG,EAAUvG,EAAQuG,KAItCyB,EAAa/B,GAAa+B,EAAa,GACvCjL,OAAOkL,uBAAsB,WACzBF,EAAWpC,OAqGIoC,CAAWpC,MAGtCpG,KAAKE,QAAQiG,iBAAiB,YAAa4E,GAC3C/K,KAAKE,QAAQiG,iBAAiB,YAAa4E,GAC3C/K,KAAKiD,GAAG,0BAA0B,WAC9B,EAAK/C,QAAQ0I,oBAAoB,YAAamC,GAC9C,EAAK7K,QAAQ0I,oBAAoB,YAAamC,Q,6CAKlD/K,KAAKkD,UAAU,4B,yCAWA,WACTkC,EAAOpF,KAAKC,WAAWwD,iBACzBoC,EAAM,KAUV,OATAvH,OAAOuL,KAAK7J,KAAKyJ,MAAML,SAAQ,SAAA7I,GAC3B,IAAM2K,EAAM,EAAKzB,KAAKlJ,GAClB2K,EAAIzK,OAAS2E,GAAQ8F,EAAIvK,KAAOyE,KAC3BS,GAAOqF,EAAIvK,IAAMuK,EAAIzK,MAAQoF,EAAIlF,IAAMkF,EAAIpF,SAC5CoF,EAAMqF,MAKXrF,I,+CAcchH,EAAOgB,GAC5B,GAAIA,EAAOsL,mBAAoB,CAE3B,IAAMC,EAASvL,EAAOwL,kBAAoB,EAC1C,OACIzI,KAAKkD,OAAOjH,EAAQuM,GAAUvL,EAAOsL,oBACjCtL,EAAOsL,mBACXC,EAKR,OAAOvM,M","file":"wavesurfer.regions.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"regions\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"regions\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"regions\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/plugin/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","/**\n * (Single) Region plugin class\n *\n * Must be turned into an observer before instantiating. This is done in\n * `RegionsPlugin` (main plugin class).\n *\n * @extends {Observer}\n */\nexport class Region {\n    constructor(params, regionsUtils, ws) {\n        this.wavesurfer = ws;\n        this.wrapper = ws.drawer.wrapper;\n        this.util = ws.util;\n        this.style = this.util.style;\n        this.regionsUtil = regionsUtils;\n\n        this.id = params.id == null ? ws.util.getId() : params.id;\n        this.start = Number(params.start) || 0;\n        this.end =\n            params.end == null\n                ? // small marker-like region\n                this.start +\n                (4 / this.wrapper.scrollWidth) * this.wavesurfer.getDuration()\n                : Number(params.end);\n        this.resize =\n            params.resize === undefined ? true : Boolean(params.resize);\n        this.drag = params.drag === undefined ? true : Boolean(params.drag);\n        // reflect resize and drag state of region for region-updated listener\n        this.isResizing = false;\n        this.isDragging = false;\n        this.loop = Boolean(params.loop);\n        this.color = params.color || 'rgba(0, 0, 0, 0.1)';\n        // The left and right handleStyle properties can be set to 'none' for\n        // no styling or can be assigned an object containing CSS properties.\n        this.handleStyle = params.handleStyle || {\n            left: {},\n            right: {}\n        };\n        this.data = params.data || {};\n        this.attributes = params.attributes || {};\n\n        this.maxLength = params.maxLength;\n        this.minLength = params.minLength;\n        this._onRedraw = () => this.updateRender();\n\n        this.scroll = params.scroll !== false && ws.params.scrollParent;\n        this.scrollSpeed = params.scrollSpeed || 1;\n        this.scrollThreshold = params.scrollThreshold || 10;\n        // Determines whether the context menu is prevented from being opened.\n        this.preventContextMenu =\n            params.preventContextMenu === undefined\n                ? false\n                : Boolean(params.preventContextMenu);\n\n        // select channel ID to set region\n        let channelIdx =\n            params.channelIdx == null ? -1 : parseInt(params.channelIdx);\n        this.regionHeight = '100%';\n        this.marginTop = '0px';\n\n        if (channelIdx !== -1) {\n            let channelCount =\n                this.wavesurfer.backend.buffer != null\n                    ? this.wavesurfer.backend.buffer.numberOfChannels\n                    : -1;\n            if (channelCount >= 0 && channelIdx < channelCount) {\n                this.regionHeight = Math.floor((1 / channelCount) * 100) + '%';\n                this.marginTop = this.wavesurfer.getHeight() * channelIdx + 'px';\n            }\n        }\n\n        this.bindInOut();\n        this.render();\n        this.wavesurfer.on('zoom', this._onRedraw);\n        this.wavesurfer.on('redraw', this._onRedraw);\n        this.wavesurfer.fireEvent('region-created', this);\n    }\n\n    /* Update region params. */\n    update(params) {\n        if (params.start != null) {\n            this.start = Number(params.start);\n        }\n        if (params.end != null) {\n            this.end = Number(params.end);\n        }\n        if (params.loop != null) {\n            this.loop = Boolean(params.loop);\n        }\n        if (params.color != null) {\n            this.color = params.color;\n        }\n        if (params.handleStyle != null) {\n            this.handleStyle = params.handleStyle;\n        }\n        if (params.data != null) {\n            this.data = params.data;\n        }\n        if (params.resize != null) {\n            this.resize = Boolean(params.resize);\n        }\n        if (params.drag != null) {\n            this.drag = Boolean(params.drag);\n        }\n        if (params.maxLength != null) {\n            this.maxLength = Number(params.maxLength);\n        }\n        if (params.minLength != null) {\n            this.minLength = Number(params.minLength);\n        }\n        if (params.attributes != null) {\n            this.attributes = params.attributes;\n        }\n\n        this.updateRender();\n        this.fireEvent('update');\n        this.wavesurfer.fireEvent('region-updated', this);\n    }\n\n    /* Remove a single region. */\n    remove() {\n        if (this.element) {\n            this.wrapper.removeChild(this.element);\n            this.element = null;\n            this.fireEvent('remove');\n            this.wavesurfer.un('zoom', this._onRedraw);\n            this.wavesurfer.un('redraw', this._onRedraw);\n            this.wavesurfer.fireEvent('region-removed', this);\n        }\n    }\n\n    /**\n     * Play the audio region.\n     * @param {number} start Optional offset to start playing at\n     */\n    play(start) {\n        const s = start || this.start;\n        this.wavesurfer.play(s, this.end);\n        this.fireEvent('play');\n        this.wavesurfer.fireEvent('region-play', this);\n    }\n\n    /**\n     * Play the audio region in a loop.\n     * @param {number} start Optional offset to start playing at\n     * */\n    playLoop(start) {\n        const s = start || this.start;\n        this.wavesurfer.play(s);\n        this.once('out', () => {\n            const realTime = this.wavesurfer.getCurrentTime();\n            if (realTime >= this.start && realTime <= this.end) {\n                return this.playLoop();\n            }\n        });\n    }\n\n    /* Render a region as a DOM element. */\n    render() {\n        const regionEl = document.createElement('region');\n\n        regionEl.className = 'wavesurfer-region';\n        regionEl.title = this.formatTime(this.start, this.end);\n        regionEl.setAttribute('data-id', this.id);\n\n        for (const attrname in this.attributes) {\n            regionEl.setAttribute(\n                'data-region-' + attrname,\n                this.attributes[attrname]\n            );\n        }\n\n        this.style(regionEl, {\n            position: 'absolute',\n            zIndex: 2,\n            height: this.regionHeight,\n            top: this.marginTop\n        });\n\n        /* Resize handles */\n        if (this.resize) {\n            const handleLeft = regionEl.appendChild(\n                document.createElement('handle')\n            );\n            const handleRight = regionEl.appendChild(\n                document.createElement('handle')\n            );\n\n            handleLeft.className = 'wavesurfer-handle wavesurfer-handle-start';\n            handleRight.className = 'wavesurfer-handle wavesurfer-handle-end';\n\n            // Default CSS properties for both handles.\n            const css = {\n                cursor: 'col-resize',\n                position: 'absolute',\n                top: '0px',\n                width: '1%',\n                maxWidth: '4px',\n                height: '100%',\n                backgroundColor: 'rgba(0, 0, 0, 1)'\n            };\n\n            // Merge CSS properties per handle.\n            const handleLeftCss =\n                this.handleStyle.left !== 'none'\n                    ? Object.assign({ left: '0px' }, css, this.handleStyle.left)\n                    : null;\n            const handleRightCss =\n                this.handleStyle.right !== 'none'\n                    ? Object.assign(\n                    { right: '0px' },\n                    css,\n                    this.handleStyle.right\n                    )\n                    : null;\n\n            if (handleLeftCss) {\n                this.style(handleLeft, handleLeftCss);\n            }\n\n            if (handleRightCss) {\n                this.style(handleRight, handleRightCss);\n            }\n        }\n\n        this.element = this.wrapper.appendChild(regionEl);\n        this.updateRender();\n        this.bindEvents(regionEl);\n    }\n\n    formatTime(start, end) {\n        return (start == end ? [start] : [start, end])\n            .map(time =>\n                [\n                    Math.floor((time % 3600) / 60), // minutes\n                    ('00' + Math.floor(time % 60)).slice(-2) // seconds\n                ].join(':')\n            )\n            .join('-');\n    }\n\n    getWidth() {\n        return this.wavesurfer.drawer.width / this.wavesurfer.params.pixelRatio;\n    }\n\n    /* Update element's position, width, color. */\n    updateRender() {\n        // duration varies during loading process, so don't overwrite important data\n        const dur = this.wavesurfer.getDuration();\n        const width = this.getWidth();\n\n        var startLimited = this.start;\n        var endLimited = this.end;\n        if (startLimited < 0) {\n            startLimited = 0;\n            endLimited = endLimited - startLimited;\n        }\n        if (endLimited > dur) {\n            endLimited = dur;\n            startLimited = dur - (endLimited - startLimited);\n        }\n\n        if (this.minLength != null) {\n            endLimited = Math.max(startLimited + this.minLength, endLimited);\n        }\n\n        if (this.maxLength != null) {\n            endLimited = Math.min(startLimited + this.maxLength, endLimited);\n        }\n\n        if (this.element != null) {\n            // Calculate the left and width values of the region such that\n            // no gaps appear between regions.\n            const left = Math.round((startLimited / dur) * width);\n            const regionWidth = Math.round((endLimited / dur) * width) - left;\n\n            this.style(this.element, {\n                left: left + 'px',\n                width: regionWidth + 'px',\n                backgroundColor: this.color,\n                cursor: this.drag ? 'move' : 'default'\n            });\n\n            for (const attrname in this.attributes) {\n                this.element.setAttribute(\n                    'data-region-' + attrname,\n                    this.attributes[attrname]\n                );\n            }\n\n            this.element.title = this.formatTime(this.start, this.end);\n        }\n    }\n\n    /* Bind audio events. */\n    bindInOut() {\n        this.firedIn = false;\n        this.firedOut = false;\n\n        const onProcess = time => {\n            let start = Math.round(this.start * 10) / 10;\n            let end = Math.round(this.end * 10) / 10;\n            time = Math.round(time * 10) / 10;\n\n            if (\n                !this.firedOut &&\n                this.firedIn &&\n                (start > time || end <= time)\n            ) {\n                this.firedOut = true;\n                this.firedIn = false;\n                this.fireEvent('out');\n                this.wavesurfer.fireEvent('region-out', this);\n            }\n            if (!this.firedIn && start <= time && end > time) {\n                this.firedIn = true;\n                this.firedOut = false;\n                this.fireEvent('in');\n                this.wavesurfer.fireEvent('region-in', this);\n            }\n        };\n\n        this.wavesurfer.backend.on('audioprocess', onProcess);\n\n        this.on('remove', () => {\n            this.wavesurfer.backend.un('audioprocess', onProcess);\n        });\n\n        /* Loop playback. */\n        this.on('out', () => {\n            if (this.loop) {\n                this.wavesurfer.play(this.start);\n            }\n        });\n    }\n\n    /* Bind DOM events. */\n    bindEvents() {\n        const preventContextMenu = this.preventContextMenu;\n\n        this.element.addEventListener('mouseenter', e => {\n            this.fireEvent('mouseenter', e);\n            this.wavesurfer.fireEvent('region-mouseenter', this, e);\n        });\n\n        this.element.addEventListener('mouseleave', e => {\n            this.fireEvent('mouseleave', e);\n            this.wavesurfer.fireEvent('region-mouseleave', this, e);\n        });\n\n        this.element.addEventListener('click', e => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('click', e);\n            this.wavesurfer.fireEvent('region-click', this, e);\n        });\n\n        this.element.addEventListener('dblclick', e => {\n            e.stopPropagation();\n            e.preventDefault();\n            this.fireEvent('dblclick', e);\n            this.wavesurfer.fireEvent('region-dblclick', this, e);\n        });\n\n        this.element.addEventListener('contextmenu', e => {\n            if (preventContextMenu) {\n                e.preventDefault();\n            }\n            this.fireEvent('contextmenu', e);\n            this.wavesurfer.fireEvent('region-contextmenu', this, e);\n        });\n\n        /* Drag or resize on mousemove. */\n        if (this.drag || this.resize) {\n            this.bindDragEvents();\n        }\n    }\n\n    bindDragEvents() {\n        const container = this.wavesurfer.drawer.container;\n        const scrollSpeed = this.scrollSpeed;\n        const scrollThreshold = this.scrollThreshold;\n        let startTime;\n        let touchId;\n        let drag;\n        let maxScroll;\n        let resize;\n        let updated = false;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            const duration = this.wavesurfer.getDuration();\n            if (!scrollDirection || (!drag && !resize)) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Get the currently selected time according to the mouse position\n            const time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(e) * duration\n            );\n            const delta = time - startTime;\n            startTime = time;\n\n            // Continue dragging or resizing\n            drag ? this.onDrag(delta) : this.onResize(delta, resize);\n\n            // Repeat\n            window.requestAnimationFrame(() => {\n                edgeScroll(e);\n            });\n        };\n\n        const onDown = e => {\n            const duration = this.wavesurfer.getDuration();\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // stop the event propagation, if this region is resizable or draggable\n            // and the event is therefore handled here.\n            if (this.drag || this.resize) {\n                e.stopPropagation();\n            }\n\n            // Store the selected startTime we begun dragging or resizing\n            startTime = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(e, true) * duration\n            );\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n            wrapperRect = this.wrapper.getBoundingClientRect();\n\n            this.isResizing = false;\n            this.isDragging = false;\n            if (e.target.tagName.toLowerCase() === 'handle') {\n                this.isResizing = true;\n                resize = e.target.classList.contains('wavesurfer-handle-start')\n                    ? 'start'\n                    : 'end';\n            } else {\n                this.isDragging = true;\n                drag = true;\n                resize = false;\n            }\n        };\n        const onUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            if (drag || resize) {\n                this.isDragging = false;\n                this.isResizing = false;\n                drag = false;\n                scrollDirection = null;\n                resize = false;\n            }\n\n            if (updated) {\n                updated = false;\n                this.util.preventClick();\n                this.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', this, e);\n            }\n        };\n        const onMove = e => {\n            const duration = this.wavesurfer.getDuration();\n\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            if (e.targetTouches && e.targetTouches[0].identifier != touchId) {\n                return;\n            }\n            if (!drag && !resize) {\n                return;\n            }\n\n            const oldTime = startTime;\n            const time = this.regionsUtil.getRegionSnapToGridValue(\n                this.wavesurfer.drawer.handleEvent(e) * duration\n            );\n\n            const delta = time - startTime;\n            startTime = time;\n\n            // Drag\n            if (this.drag && drag) {\n                updated = updated || !!delta;\n                this.onDrag(delta);\n            }\n\n            // Resize\n            if (this.resize && resize) {\n                updated = updated || !!delta;\n                this.onResize(delta, resize);\n            }\n\n            if (\n                this.scroll &&\n                container.clientWidth < this.wrapper.scrollWidth\n            ) {\n                if (drag) {\n                    // The threshold is not between the mouse and the container edge\n                    // but is between the region and the container edge\n                    const regionRect = this.element.getBoundingClientRect();\n                    let x = regionRect.left - wrapperRect.left;\n\n                    // Check direction\n                    if (time < oldTime && x >= 0) {\n                        scrollDirection = -1;\n                    } else if (\n                        time > oldTime &&\n                        x + regionRect.width <= wrapperRect.right\n                    ) {\n                        scrollDirection = 1;\n                    }\n\n                    // Check that we are still beyond the threshold\n                    if (\n                        (scrollDirection === -1 && x > scrollThreshold) ||\n                        (scrollDirection === 1 &&\n                            x + regionRect.width <\n                            wrapperRect.right - scrollThreshold)\n                    ) {\n                        scrollDirection = null;\n                    }\n                } else {\n                    // Mouse based threshold\n                    let x = e.clientX - wrapperRect.left;\n\n                    // Check direction\n                    if (x <= scrollThreshold) {\n                        scrollDirection = -1;\n                    } else if (x >= wrapperRect.right - scrollThreshold) {\n                        scrollDirection = 1;\n                    } else {\n                        scrollDirection = null;\n                    }\n                }\n\n                if (scrollDirection) {\n                    edgeScroll(e);\n                }\n            }\n        };\n\n        this.element.addEventListener('mousedown', onDown);\n        this.element.addEventListener('touchstart', onDown);\n\n        this.wrapper.addEventListener('mousemove', onMove);\n        this.wrapper.addEventListener('touchmove', onMove);\n\n        document.body.addEventListener('mouseup', onUp);\n        document.body.addEventListener('touchend', onUp);\n\n        this.on('remove', () => {\n            document.body.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n            this.wrapper.removeEventListener('mousemove', onMove);\n            this.wrapper.removeEventListener('touchmove', onMove);\n        });\n\n        this.wavesurfer.on('destroy', () => {\n            document.body.removeEventListener('mouseup', onUp);\n            document.body.removeEventListener('touchend', onUp);\n        });\n    }\n\n    onDrag(delta) {\n        const maxEnd = this.wavesurfer.getDuration();\n        if (this.end + delta > maxEnd || this.start + delta < 0) {\n            return;\n        }\n\n        this.update({\n            start: this.start + delta,\n            end: this.end + delta\n        });\n    }\n\n    onResize(delta, direction) {\n        if (direction === 'start') {\n            this.update({\n                start: Math.min(this.start + delta, this.end),\n                end: Math.max(this.start + delta, this.end)\n            });\n        } else {\n            this.update({\n                start: Math.min(this.end + delta, this.start),\n                end: Math.max(this.end + delta, this.start)\n            });\n        }\n    }\n}\n\n/**\n * @typedef {Object} RegionsPluginParams\n * @property {?boolean} dragSelection Enable creating regions by dragging with\n * the mouse\n * @property {?RegionParams[]} regions Regions that should be added upon\n * initialisation\n * @property {number} slop=2 The sensitivity of the mouse dragging\n * @property {?number} snapToGridInterval Snap the regions to a grid of the specified multiples in seconds\n * @property {?number} snapToGridOffset Shift the snap-to-grid by the specified seconds. May also be negative.\n * @property {?boolean} deferInit Set to true to manually call\n * @property {number[]} maxRegions Maximum number of regions that may be created by the user at one time.\n * `initPlugin('regions')`\n */\n\n/**\n * @typedef {Object} RegionParams\n * @desc The parameters used to describe a region.\n * @example wavesurfer.addRegion(regionParams);\n * @property {string} id=→random The id of the region\n * @property {number} start=0 The start position of the region (in seconds).\n * @property {number} end=0 The end position of the region (in seconds).\n * @property {?boolean} loop Whether to loop the region when played back.\n * @property {boolean} drag=true Allow/disallow dragging the region.\n * @property {boolean} resize=true Allow/disallow resizing the region.\n * @property {string} [color='rgba(0, 0, 0, 0.1)'] HTML color code.\n * @property {?number} channelIdx Select channel to draw the region on (if there are multiple channel waveforms).\n * @property {?object} handleStyle A set of CSS properties used to style the left and right handle.\n * @property {?boolean} preventContextMenu=false Determines whether the context menu is prevented from being opened.\n */\n\n/**\n * Regions are visual overlays on waveform that can be used to play and loop\n * portions of audio. Regions can be dragged and resized.\n *\n * Visual customization is possible via CSS (using the selectors\n * `.wavesurfer-region` and `.wavesurfer-handle`).\n *\n * @implements {PluginClass}\n * @extends {Observer}\n *\n * @example\n * // es6\n * import RegionsPlugin from 'wavesurfer.regions.js';\n *\n * // commonjs\n * var RegionsPlugin = require('wavesurfer.regions.js');\n *\n * // if you are using <script> tags\n * var RegionsPlugin = window.WaveSurfer.regions;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     RegionsPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class RegionsPlugin {\n    /**\n     * Regions plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param {RegionsPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'regions',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                addRegion(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    return this.regions.add(options);\n                },\n\n                clearRegions() {\n                    this.regions && this.regions.clear();\n                },\n\n                enableDragSelection(options) {\n                    if (!this.initialisedPluginList.regions) {\n                        this.initPlugin('regions');\n                    }\n                    this.regions.enableDragSelection(options);\n                },\n\n                disableDragSelection() {\n                    this.regions.disableDragSelection();\n                }\n            },\n            instance: RegionsPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = {\n            ...ws.util,\n            getRegionSnapToGridValue: value => {\n                return this.getRegionSnapToGridValue(value, params);\n            }\n        };\n        this.maxRegions = params.maxRegions;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            this.util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Region.prototype[key] = this.util.Observer.prototype[key];\n        });\n        this.wavesurfer.Region = Region;\n\n        this._onBackendCreated = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.regions) {\n                this.params.regions.forEach(region => {\n                    this.add(region);\n                });\n            }\n        };\n\n        // Id-based hash of regions\n        this.list = {};\n        this._onReady = () => {\n            this.wrapper = this.wavesurfer.drawer.wrapper;\n            if (this.params.dragSelection) {\n                this.enableDragSelection(this.params);\n            }\n            Object.keys(this.list).forEach(id => {\n                this.list[id].updateRender();\n            });\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onBackendCreated();\n            this._onReady();\n        } else {\n            this.wavesurfer.once('ready', this._onReady);\n            this.wavesurfer.once('backend-created', this._onBackendCreated);\n        }\n    }\n\n    destroy() {\n        this.wavesurfer.un('ready', this._onReady);\n        this.wavesurfer.un('backend-created', this._onBackendCreated);\n        this.disableDragSelection();\n        this.clear();\n    }\n\n    /**\n     * check to see if adding a new region would exceed maxRegions\n     * @return {boolean} whether we should proceed and create a region\n     */\n    wouldExceedMaxRegions() {\n        return (\n            this.maxRegions && Object.keys(this.list).length >= this.maxRegions\n        );\n    }\n\n    /**\n     * Add a region\n     *\n     * @param {object} params Region parameters\n     * @return {Region} The created region\n     */\n    add(params) {\n        if (this.wouldExceedMaxRegions()) return null;\n\n        const region = new this.wavesurfer.Region(params, this.util, this.wavesurfer);\n\n        this.list[region.id] = region;\n\n        region.on('remove', () => {\n            delete this.list[region.id];\n        });\n\n        return region;\n    }\n\n    /**\n     * Remove all regions\n     */\n    clear() {\n        Object.keys(this.list).forEach(id => {\n            this.list[id].remove();\n        });\n    }\n\n    enableDragSelection(params) {\n        this.disableDragSelection();\n\n        const slop = params.slop || 2;\n        const container = this.wavesurfer.drawer.container;\n        const scroll =\n            params.scroll !== false && this.wavesurfer.params.scrollParent;\n        const scrollSpeed = params.scrollSpeed || 1;\n        const scrollThreshold = params.scrollThreshold || 10;\n        let drag;\n        let duration = this.wavesurfer.getDuration();\n        let maxScroll;\n        let start;\n        let region;\n        let touchId;\n        let pxMove = 0;\n        let scrollDirection;\n        let wrapperRect;\n\n        // Scroll when the user is dragging within the threshold\n        const edgeScroll = e => {\n            if (!region || !scrollDirection) {\n                return;\n            }\n\n            // Update scroll position\n            let scrollLeft =\n                this.wrapper.scrollLeft + scrollSpeed * scrollDirection;\n            this.wrapper.scrollLeft = scrollLeft = Math.min(\n                maxScroll,\n                Math.max(0, scrollLeft)\n            );\n\n            // Update range\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            region.update({\n                start: Math.min(end * duration, start * duration),\n                end: Math.max(end * duration, start * duration)\n            });\n\n            // Check that there is more to scroll and repeat\n            if (scrollLeft < maxScroll && scrollLeft > 0) {\n                window.requestAnimationFrame(() => {\n                    edgeScroll(e);\n                });\n            }\n        };\n\n        const eventDown = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            duration = this.wavesurfer.getDuration();\n            touchId = e.targetTouches ? e.targetTouches[0].identifier : null;\n\n            // Store for scroll calculations\n            maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n            wrapperRect = this.wrapper.getBoundingClientRect();\n\n            drag = true;\n            start = this.wavesurfer.drawer.handleEvent(e, true);\n            region = null;\n            scrollDirection = null;\n        };\n        this.wrapper.addEventListener('mousedown', eventDown);\n        this.wrapper.addEventListener('touchstart', eventDown);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchstart', eventDown);\n            this.wrapper.removeEventListener('mousedown', eventDown);\n        });\n\n        const eventUp = e => {\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n\n            drag = false;\n            pxMove = 0;\n            scrollDirection = null;\n\n            if (region) {\n                this.util.preventClick();\n                region.fireEvent('update-end', e);\n                this.wavesurfer.fireEvent('region-update-end', region, e);\n            }\n\n            region = null;\n        };\n        this.wrapper.addEventListener('mouseup', eventUp);\n        this.wrapper.addEventListener('touchend', eventUp);\n\n        document.body.addEventListener('mouseup', eventUp);\n        document.body.addEventListener('touchend', eventUp);\n        this.on('disable-drag-selection', () => {\n            document.body.removeEventListener('mouseup', eventUp);\n            document.body.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('touchend', eventUp);\n            this.wrapper.removeEventListener('mouseup', eventUp);\n        });\n\n        const eventMove = e => {\n            if (!drag) {\n                return;\n            }\n            if (++pxMove <= slop) {\n                return;\n            }\n\n            if (e.touches && e.touches.length > 1) {\n                return;\n            }\n            if (e.targetTouches && e.targetTouches[0].identifier != touchId) {\n                return;\n            }\n\n            // auto-create a region during mouse drag, unless region-count would exceed \"maxRegions\"\n            if (!region) {\n                region = this.add(params || {});\n                if (!region) return;\n            }\n\n            const end = this.wavesurfer.drawer.handleEvent(e);\n            const startUpdate = this.util.getRegionSnapToGridValue(\n                start * duration\n            );\n            const endUpdate = this.util.getRegionSnapToGridValue(\n                end * duration\n            );\n            region.update({\n                start: Math.min(endUpdate, startUpdate),\n                end: Math.max(endUpdate, startUpdate)\n            });\n\n            // If scrolling is enabled\n            if (scroll && container.clientWidth < this.wrapper.scrollWidth) {\n                // Check threshold based on mouse\n                const x = e.clientX - wrapperRect.left;\n                if (x <= scrollThreshold) {\n                    scrollDirection = -1;\n                } else if (x >= wrapperRect.right - scrollThreshold) {\n                    scrollDirection = 1;\n                } else {\n                    scrollDirection = null;\n                }\n                scrollDirection && edgeScroll(e);\n            }\n        };\n        this.wrapper.addEventListener('mousemove', eventMove);\n        this.wrapper.addEventListener('touchmove', eventMove);\n        this.on('disable-drag-selection', () => {\n            this.wrapper.removeEventListener('touchmove', eventMove);\n            this.wrapper.removeEventListener('mousemove', eventMove);\n        });\n    }\n\n    disableDragSelection() {\n        this.fireEvent('disable-drag-selection');\n    }\n\n    /**\n     * Get current region\n     *\n     * The smallest region that contains the current time. If several such\n     * regions exist, take the first. Return `null` if none exist.\n     *\n     * @returns {Region} The current region\n     */\n    getCurrentRegion() {\n        const time = this.wavesurfer.getCurrentTime();\n        let min = null;\n        Object.keys(this.list).forEach(id => {\n            const cur = this.list[id];\n            if (cur.start <= time && cur.end >= time) {\n                if (!min || cur.end - cur.start < min.end - min.start) {\n                    min = cur;\n                }\n            }\n        });\n\n        return min;\n    }\n\n    /**\n     * Match the value to the grid, if required\n     *\n     * If the regions plugin params have a snapToGridInterval set, return the\n     * value matching the nearest grid interval. If no snapToGridInterval is set,\n     * the passed value will be returned without modification.\n     *\n     * @param {number} value the value to snap to the grid, if needed\n     * @param {Object} params the regions plugin params\n     * @returns {number} value\n     */\n    getRegionSnapToGridValue(value, params) {\n        if (params.snapToGridInterval) {\n            // the regions should snap to a grid\n            const offset = params.snapToGridOffset || 0;\n            return (\n                Math.round((value - offset) / params.snapToGridInterval) *\n                    params.snapToGridInterval +\n                offset\n            );\n        }\n\n        // no snap-to-grid\n        return value;\n    }\n}\n"],"sourceRoot":""}